{"version":3,"sources":["main-hub/hooks/use-hooks.js","backgrounds/Lemons.png","backgrounds/Cosmos.png","backgrounds/Koi.png","backgrounds/Circuit.png","logo.svg","my-calcs/hooks/use-hooks.js","my-calcs/my-calcs-styles.js","my-calcs/my-calcs.jsx","my-bim-tracker/hooks/use-hooks.js","my-bim-tracker/my-bim-tracker-styles.js","my-bim-tracker/my-bim-tracker.jsx","bm-weather/bm-weather-styles.js","bm-news/bm-news-styles.js","bm-news/bm-news.jsx","header/header-styles.js","header/header.jsx","header/hooks/use-hooks.js","my-projects/hooks/use-hooks.js","my-projects/my-projects.jsx","welcome/welcome.jsx","coming-soon/coming-soon.jsx","main-hub/main-hub-styles.js","main-hub/main-hub.jsx","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["useState","sendNotification","setSendNotification","loggedIn","setLoggedIn","userData","setUserData","userImgData","setUserImgData","localStorage","getItem","Lemons","selectedBackground","setSelectedBackground","hextoBase64","str","Buffer","from","toString","handleNotification","Notification","requestPermission","then","onclick","event","preventDefault","window","open","useEffect","console","log","authHandler","err","data","axios","get","headers","accessToken","photo","require","myCalcs","setMyCalcs","newCalcs","setNewCalcs","notificationSent","setNotificationSent","getMyCalcs","account","userName","response","calcs","checkForCalcs","setInterval","clearInterval","length","completeCalc","calc","ProjectCode","makeStyles","table","MainHub","props","useHooks","classes","useStyles","TableContainer","component","Paper","className","Table","stickyHeader","size","TableHead","TableCell","TableBody","map","TableRow","calculation","JobNameShort","stage","Button","variant","color","onClick","calculation_id","bimTrackers","marginBottom","maxWidth","margin","maxHeight","overflowY","cellRed","cellAmber","cellGreen","cellYellow","tableHeader","fontWeight","jobNameCell","width","cursor","projectCodeCell","paddingRight","iconHeader","paddingTop","paddingBottom","paddingLeft","iconCell","healthCell","accordionContainer","accordionProjectStatus","float","MyBIMTracker","myRecords","setMyRecords","bimLeadRecords","setBimLeadRecords","bimCheckerApproverRecords","setBimCheckerApproverRecords","expandTables","setExpandTables","getRecords","getProgress","records","record","completePeople","completeStorage","completeProcess","completeCoordination","Approver_B_name","Checker_B_name","CoordinationManager","Engineer_B_name","storage_CDE","storage_C_Models","storage_Clarity_BIM_360_Backup","storage_MEP_Models","storage_S_Models","process_BEP_Status","process_EIR_Status","process_Information_Deliverables","process_Responsibility_Matrix_Status","coordination_Internal_Coord_Meetings","coordination_Issue_Tracking","coordination_Whole_Team_Coord_Meetings","interval","newBIMLeadRecords","newBIMCheckerApproverRecords","push","handleExpandTables","handleOpenProject","projectCode","url","handleOpenProjectDiscipline","discipline","Typography","Accordion","AccordionSummary","expandIcon","PCode","Tooltip","placement","title","projectStatus","AccordionDetails","automation_Clarity_Nightly_Exports","updated_at","formatDistanceToNow","parseISO","weather","marginRight","marginLeft","news","height","marginTop","BMNews","Box","sx","box","toolbar","backgroundColor","headerGrid","popover","minWidth","popoverButton","Header","anchorEl","setAnchorEl","togglePopover","currentTarget","popoverOpen","Boolean","closePopover","handleChangeBackground","target","value","setItem","flexGrow","AppBar","position","Toolbar","disableGutters","Grid","container","item","xs","startIcon","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","alignItems","src","displayName","officeLocation","FormControl","FormLabel","RadioGroup","name","onChange","FormControlLabel","control","Radio","label","myProjects","setMyProjects","loading","setLoading","getMyProjects","allData","newProjects","currentData","project","Object","values","includes","myRoles","prop","displayProp","MyProjects","role","join","Welcome","align","style","ComingSoon","loginScreen","weatherGrid","spacerDiv","content","contentGridRow","clientId","authCallback","useLocalStorageCache","withUserData","wholePage","backgroundImage","direction","spacing","Card","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f809a3d9.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { format, isThisSecond, isEqual } from \"date-fns\";\r\nimport axios from \"axios\";\r\n\r\n//Background Image Objects - Don't Delete!!!! THESE ARE ACTUALLY ALL BEING USED\r\nimport Lemons from \"../../backgrounds/Lemons.png\";\r\nimport Cosmos from \"../../backgrounds/Cosmos.png\";\r\nimport Koi from \"../../backgrounds/Koi.png\";\r\nimport Circuit from \"../../backgrounds/Circuit.png\";\r\n//DONT DELETE ^^^^^^\r\n\r\nexport default () => {\r\n  const [sendNotification, setSendNotification] = useState(false);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [userData, setUserData] = useState([]);\r\n  const [userImgData, setUserImgData] = useState(\"\");\r\n  const [selectedBackground, setSelectedBackground] = useState(\r\n    localStorage.getItem(\"selectedBackground\")\r\n      ? localStorage.getItem(\"selectedBackground\")\r\n      : Lemons\r\n  );\r\n\r\n  const authHandler = (err, data) => {\r\n    console.log(err, data);\r\n    if (data) {\r\n      //https://graph.microsoft.com/v1.0/me/photo/$value\r\n      // prettier-ignore\r\n      axios\r\n        .get(\"https://graph.microsoft.com/v1.0/me/photo/$value\", {\r\n          headers: { \"Authorization\": \"Bearer \" + data.accessToken },\r\n        })\r\n        .then((photo) => {\r\n          setUserImgData(hextoBase64(photo.data));\r\n        });\r\n      setUserData(data);\r\n      setLoggedIn(true);\r\n    }\r\n  };\r\n\r\n  const hextoBase64 = (str) => {\r\n    // return btoa(\r\n    //   String.fromCharCode.apply(\r\n    //     null,\r\n    //     str\r\n    //       .replace(/\\r|\\n/g, \"\")\r\n    //       .replace(/([\\da-fA-F]{2}) ?/g, \"0x$1 \")\r\n    //       .replace(/ +$/, \"\")\r\n    //       .split(\" \")\r\n    //   )\r\n    // );\r\n    let buff = Buffer.from(userImgData);\r\n    return buff.toString(\"base64\");\r\n  };\r\n\r\n  const handleNotification = () => {\r\n    Notification.requestPermission().then(() => {\r\n      var notification = new Notification(\r\n        \"You have 4 new calculations to complete, click to view\"\r\n      );\r\n      notification.onclick = function (event) {\r\n        event.preventDefault();\r\n        window.open(\r\n          \"https://bmtools.arup.com/calcs/mechanical/project/demo\",\r\n          \"_blank\"\r\n        );\r\n      };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sendNotification) {\r\n      const timedNotification = () => {\r\n        console.log(\"timed notification\");\r\n      };\r\n      timedNotification();\r\n      handleNotification();\r\n      setSendNotification(false);\r\n    }\r\n  }, [sendNotification]);\r\n\r\n  return {\r\n    handleNotification,\r\n    loggedIn,\r\n    authHandler,\r\n    userData,\r\n    userImgData,\r\n    selectedBackground,\r\n    setSelectedBackground,\r\n  };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Lemons.25a0929a.png\";","export default __webpack_public_path__ + \"static/media/Cosmos.c6c9718e.png\";","export default __webpack_public_path__ + \"static/media/Koi.a797714b.png\";","export default __webpack_public_path__ + \"static/media/Circuit.6d04891f.png\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState, useEffect } from \"react\";\r\nconst axios = require(\"axios\");\r\n\r\nexport default (userData) => {\r\n  const [myCalcs, setMyCalcs] = useState([]);\r\n  const [newCalcs, setNewCalcs] = useState([]);\r\n  const [notificationSent, setNotificationSent] = useState(false);\r\n\r\n  const getMyCalcs = () => {\r\n    axios\r\n      .get(\r\n        `https://bmtools.arup.com/calcs/api/mechanical/pwadata/${userData.account.userName}`\r\n        //`https://bmtools.arup.com/calcs/api/mechanical/pwadata/Sean.Chapman@arup.com`\r\n      )\r\n      .then(function (response) {\r\n        setMyCalcs(response.data.calcs);\r\n      });\r\n  };\r\n\r\n  const getNewCalcs = () => {\r\n    axios\r\n      .get(\r\n        `https://bmtools.arup.com/calcs/api/mechanical/pwadata/${userData.account.userName}`\r\n        //`https://bmtools.arup.com/calcs/api/mechanical/pwadata/Sean.Chapman@arup.com`\r\n      )\r\n      .then(function (response) {\r\n        setNewCalcs(response.data.calcs);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyCalcs();\r\n    setNewCalcs(myCalcs);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const checkForCalcs = setInterval(() => {\r\n      getNewCalcs();\r\n      return () => clearInterval(checkForCalcs);\r\n    }, 60000);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (newCalcs.length > myCalcs.length) {\r\n      //Could link to the specific project\r\n      Notification.requestPermission().then(() => {\r\n        var notification = new Notification(\r\n          \"You have a new Calculation to complete\"\r\n        );\r\n        notification.onclick = function (event) {\r\n          event.preventDefault();\r\n          window.open(\r\n            \"https://bmtools.arup.com/calcs/mechanical/mycalcs\",\r\n            \"_blank\"\r\n          );\r\n        };\r\n      });\r\n    } else if (newCalcs.length < myCalcs.length) {\r\n      //Could display how many more to go\r\n      Notification.requestPermission().then(() => {\r\n        new Notification(\r\n          `Well done! You've completed a Calculation, only ${newCalcs.length} more to go.`\r\n        );\r\n      });\r\n    }\r\n    console.log(newCalcs, myCalcs);\r\n    setNotificationSent(true);\r\n  }, [newCalcs]);\r\n\r\n  useEffect(() => {\r\n    if (notificationSent === true) {\r\n      getMyCalcs();\r\n      setNotificationSent(false);\r\n    }\r\n    console.log(myCalcs, newCalcs);\r\n  }, [notificationSent]);\r\n\r\n  const completeCalc = (calc) => {\r\n    window.open(\r\n      `https://bmtools.arup.com/calcs/mechanical/project/${calc.ProjectCode}`,\r\n      \"_blank\"\r\n    );\r\n  };\r\n\r\n  return {\r\n    myCalcs,\r\n    completeCalc,\r\n  };\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles({\r\n  table: {\r\n    // //width: \"50%\",\r\n    // marginTop: 50,\r\n    // marginLeft: \"2.5%\",\r\n    // //margin: \"auto\",\r\n    // maxHeight: 350,\r\n    // overflowY: \"auto\",\r\n  },\r\n});\r\n","import React from \"react\"\r\n\r\n//Material UI Components\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n//Hooks\r\nimport useHooks from './hooks/use-hooks.js';\r\n\r\n//Styles\r\nimport useStyles from './my-calcs-styles.js'\r\n\r\nexport default function MainHub(props) {\r\n    const {\r\n        userData\r\n    }= props;\r\n    const {\r\n        myCalcs,\r\n        completeCalc\r\n    } = useHooks(userData);\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <TableContainer component={Paper} className={classes.table}>\r\n                <Table stickyHeader size=\"small\">\r\n                    <TableHead>\r\n                        <TableCell>Calculation Name</TableCell>\r\n                        <TableCell>Project Name</TableCell>\r\n                        <TableCell>Stage</TableCell>\r\n                        <TableCell />\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {myCalcs.map((calc) => (\r\n                         <TableRow key={calc.calculation_id}>\r\n                             <TableCell>{calc.calculation}</TableCell>\r\n                             <TableCell>{calc.JobNameShort}</TableCell>\r\n                             <TableCell>{calc.stage}</TableCell>\r\n                             <TableCell><Button variant=\"contained\" color=\"primary\" onClick={() => completeCalc(calc)}>Complete</Button></TableCell>\r\n                         </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from \"react\";\r\nconst axios = require(\"axios\");\r\n\r\nexport default (userData) => {\r\n  const [myRecords, setMyRecords] = useState([]);\r\n  const [bimLeadRecords, setBimLeadRecords] = useState([]);\r\n  const [bimCheckerApproverRecords, setBimCheckerApproverRecords] = useState(\r\n    []\r\n  );\r\n  const [expandTables, setExpandTables] = useState(false);\r\n\r\n  const getRecords = () => {\r\n    axios\r\n      .get(\"https://bmtools.arup.com/bimtracker/api/allrecords/all\")\r\n      .then(function (response) {\r\n        getProgress(response.data);\r\n      });\r\n\r\n    //Check for ActiveBIM status\r\n  };\r\n\r\n  const getProgress = (data) => {\r\n    const records = data.map((record) => {\r\n      let completePeople = false;\r\n      let completeStorage = false;\r\n      let completeProcess = false;\r\n      let completeCoordination = false;\r\n      if (\r\n        record.Approver_B_name &&\r\n        record.Checker_B_name &&\r\n        record.CoordinationManager &&\r\n        record.Engineer_B_name\r\n      ) {\r\n        completePeople = true;\r\n      }\r\n      if (\r\n        record.storage_CDE &&\r\n        record.storage_C_Models &&\r\n        record.storage_Clarity_BIM_360_Backup &&\r\n        record.storage_MEP_Models &&\r\n        record.storage_S_Models\r\n      ) {\r\n        completeStorage = true;\r\n      }\r\n      if (\r\n        //record.process_BEP_Comments &&\r\n        record.process_BEP_Status &&\r\n        //record.process_Comments &&\r\n        //record.process_EIR_Comments &&\r\n        record.process_EIR_Status &&\r\n        record.process_Information_Deliverables &&\r\n        //record.process_Responsibility_Matrix_Comments &&\r\n        record.process_Responsibility_Matrix_Status\r\n      ) {\r\n        completeProcess = true;\r\n      }\r\n      if (\r\n        record.coordination_Internal_Coord_Meetings &&\r\n        record.coordination_Issue_Tracking &&\r\n        //record.coordination_Issue_Tracking_Other &&\r\n        record.coordination_Whole_Team_Coord_Meetings\r\n      ) {\r\n        completeCoordination = true;\r\n      }\r\n      return {\r\n        ...record,\r\n        completePeople,\r\n        completeStorage,\r\n        completeProcess,\r\n        completeCoordination,\r\n      };\r\n    });\r\n    setMyRecords(records);\r\n    console.log(\"myRecords\", myRecords);\r\n  };\r\n\r\n  const handleExpandTables = () => {\r\n    setExpandTables(!expandTables);\r\n  };\r\n\r\n  const handleOpenProject = (projectCode) => {\r\n    let url =\r\n      \"https://bmtools.arup.com/bimtracker?projectFilter=\" + projectCode;\r\n    window.open(url);\r\n  };\r\n\r\n  const handleOpenProjectDiscipline = (projectCode, discipline) => {\r\n    let url =\r\n      \"https://bmtools.arup.com/bimtracker?projectFilter=\" +\r\n      projectCode +\r\n      \"&discipline=\" +\r\n      discipline;\r\n    window.open(url);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRecords();\r\n    const interval = setInterval(() => {\r\n      getRecords();\r\n    }, 60000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (myRecords.length > 0) {\r\n      let newBIMLeadRecords = [];\r\n      let newBIMCheckerApproverRecords = [];\r\n      myRecords.map((record) => {\r\n        // Replace with this for live: if(record.Engineer_B_name === userData.account.name)\r\n        if (record.Engineer_B_name === \"Colin Magner\") {\r\n          newBIMLeadRecords.push(record);\r\n        }\r\n        // Replace with this for live: if(record.Checker_B_name === userData.account.name || record.Approver_B_name === \"userData.account.name)\r\n        if (\r\n          record.Checker_B_name === \"Colin Magner\" ||\r\n          record.Approver_B_name === \"Colin Magner\"\r\n        ) {\r\n          newBIMCheckerApproverRecords.push(record);\r\n        }\r\n      });\r\n      setBimLeadRecords(newBIMLeadRecords);\r\n      setBimCheckerApproverRecords(newBIMCheckerApproverRecords);\r\n    }\r\n  }, [myRecords]);\r\n\r\n  return {\r\n    myRecords,\r\n    bimLeadRecords,\r\n    bimCheckerApproverRecords,\r\n    handleExpandTables,\r\n    expandTables,\r\n    handleOpenProject,\r\n    handleOpenProjectDiscipline,\r\n  };\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles({\r\n  bimTrackers: {\r\n    // marginLeft: 10,\r\n    // marginRight: 10,\r\n    marginBottom: 10,\r\n  },\r\n  table: {\r\n    maxWidth: \"100%\",\r\n    margin: \"auto\",\r\n    maxHeight: 350,\r\n    overflowY: \"auto\",\r\n  },\r\n  cellRed: {\r\n    color: \"#ff0000\",\r\n  },\r\n  cellAmber: {\r\n    color: \"#FFBF00\",\r\n  },\r\n  cellGreen: {\r\n    color: \"#00FF00\",\r\n  },\r\n  cellYellow: {\r\n    color: \"#FFFF00\",\r\n  },\r\n  tableHeader: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  jobNameCell: {\r\n    width: 200,\r\n    cursor: \"pointer\",\r\n  },\r\n  projectCodeCell: {\r\n    width: 50,\r\n    paddingRight: 0,\r\n    cursor: \"pointer\",\r\n  },\r\n  iconHeader: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n  },\r\n  iconCell: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    cursor: \"pointer\",\r\n  },\r\n  healthCell: {\r\n    //width: 400,\r\n  },\r\n  accordionContainer: {\r\n    width: 500,\r\n  },\r\n  accordionProjectStatus: {\r\n    float: \"right\",\r\n    //position: \"fixed\",\r\n  },\r\n});\r\n","import React from \"react\"\r\nimport { formatDistanceToNow, parseISO } from 'date-fns'\r\n\r\n//Hooks\r\nimport useHooks from './hooks/use-hooks.js';\r\n\r\n//Material UI Components\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport StorageIcon from '@mui/icons-material/Storage';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport FactCheckIcon from '@mui/icons-material/FactCheck';\r\nimport ExtensionIcon from '@mui/icons-material/Extension';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\n//Styles\r\nimport useStyles from './my-bim-tracker-styles.js';\r\n\r\nexport default function MyBIMTracker(props) {\r\n    const {\r\n        userData\r\n    } = props;\r\n    const {\r\n        myRecords,\r\n        bimLeadRecords,\r\n        bimCheckerApproverRecords,\r\n        handleExpandTables,\r\n        expandTables,\r\n        handleOpenProject,\r\n        handleOpenProjectDiscipline\r\n    } = useHooks(\r\n        userData\r\n    );\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.bimTrackers}>\r\n            <div className={classes.accordionContainer}>\r\n            <Typography>I'm Checker/Approver</Typography>\r\n            {bimCheckerApproverRecords.map((record) => (\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>\r\n                            {record.PCode} {record.JobNameShort}\r\n                        </Typography>\r\n                        <div className={classes.accordionProjectStatus}>\r\n                        <Tooltip placement=\"top\" title={100 - record.projectStatus < 0\r\n                            ? 0 + \"%\"\r\n                            : 100 - record.projectStatus + \"%\"}\r\n                        >\r\n                            <FavoriteIcon className={100 - record.projectStatus < 51 ? (classes.cellRed) : \r\n                                (100 - record.projectStatus < 76 ? (classes.cellAmber) : \r\n                                (100 - record.projectStatus < 100 ? (classes.cellYellow) : (classes.cellGreen)))}\r\n                            />\r\n                        </Tooltip>\r\n                        </div>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableCell className={classes.iconHeader}><Tooltip title=\"People\" placement=\"top\"><PersonIcon /></Tooltip></TableCell>\r\n                                <TableCell className={classes.iconHeader}><Tooltip title=\"Storage\" placement=\"top\"><StorageIcon /></Tooltip></TableCell>\r\n                                <TableCell className={classes.iconHeader}><Tooltip title=\"Process\" placement=\"top\"><SettingsIcon /></Tooltip></TableCell>\r\n                                <TableCell className={classes.iconHeader}><Tooltip title=\"Coordination\" placement=\"top\"><FactCheckIcon /></Tooltip></TableCell>\r\n                                <TableCell className={classes.iconHeader}><Tooltip title=\"Automation\" placement=\"top\"><ExtensionIcon /></Tooltip></TableCell>\r\n                                <TableCell className={classes.tableHeader}>Last Updated</TableCell>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell className={classes.iconCell} onClick={() => handleOpenProjectDiscipline(record.PCode, \"people\")}>{record.completePeople ? (<CheckIcon />) : (<ClearIcon />)}</TableCell>\r\n                                    <TableCell className={classes.iconCell} onClick={() => handleOpenProjectDiscipline(record.PCode, \"storage\")}>{record.completeStorage ? (<CheckIcon />) : (<ClearIcon />)}</TableCell>\r\n                                    <TableCell className={classes.iconCell} onClick={() => handleOpenProjectDiscipline(record.PCode, \"process\")}>{record.completeProcess ? (<CheckIcon />) : (<ClearIcon />)}</TableCell>\r\n                                    <TableCell className={classes.iconCell} onClick={() => handleOpenProjectDiscipline(record.PCode, \"coordination\")}>{record.completeCoordination ? (<CheckIcon />) : (<ClearIcon />)}</TableCell>\r\n                                    <TableCell className={classes.iconCell} onClick={() => handleOpenProjectDiscipline(record.PCode, \"automation\")}>\r\n                                        {record.automation_Clarity_Nightly_Exports ? (<CheckIcon />) : (<ClearIcon />)}\r\n                                    </TableCell>\r\n                                    <TableCell>{record.updated_at ? (formatDistanceToNow(parseISO(record.updated_at))) + \" ago\" : (\"No data\")}</TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            ))}\r\n            <Typography>I'm BIM Lead</Typography>\r\n            {bimLeadRecords.map((record) => (\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        <Typography>\r\n                            {record.PCode} {record.JobNameShort}\r\n                        </Typography>\r\n                        <div className={classes.accordionProjectStatus}>\r\n                        <Tooltip placement=\"top\" title={100 - record.projectStatus < 0\r\n                            ? 0 + \"%\"\r\n                            : 100 - record.projectStatus + \"%\"}\r\n                        >\r\n                            <FavoriteIcon className={100 - record.projectStatus < 51 ? (classes.cellRed) : \r\n                                (100 - record.projectStatus < 76 ? (classes.cellAmber) : \r\n                                (100 - record.projectStatus < 100 ? (classes.cellYellow) : (classes.cellGreen)))}\r\n                            />\r\n                        </Tooltip>\r\n                        </div>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableCell className={classes.iconHeader}><Tooltip title=\"People\" placement=\"top\"><PersonIcon /></Tooltip></TableCell>\r\n                                <TableCell className={classes.iconHeader}><Tooltip title=\"Storage\" placement=\"top\"><StorageIcon /></Tooltip></TableCell>\r\n                                <TableCell className={classes.iconHeader}><Tooltip title=\"Process\" placement=\"top\"><SettingsIcon /></Tooltip></TableCell>\r\n                                <TableCell className={classes.iconHeader}><Tooltip title=\"Coordination\" placement=\"top\"><FactCheckIcon /></Tooltip></TableCell>\r\n                                <TableCell className={classes.iconHeader}><Tooltip title=\"Automation\" placement=\"top\"><ExtensionIcon /></Tooltip></TableCell>\r\n                                <TableCell className={classes.tableHeader}>Last Updated</TableCell>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell className={classes.iconCell} onClick={() => handleOpenProjectDiscipline(record.PCode, \"people\")}>{record.completePeople ? (<CheckIcon />) : (<ClearIcon />)}</TableCell>\r\n                                    <TableCell className={classes.iconCell} onClick={() => handleOpenProjectDiscipline(record.PCode, \"storage\")}>{record.completeStorage ? (<CheckIcon />) : (<ClearIcon />)}</TableCell>\r\n                                    <TableCell className={classes.iconCell} onClick={() => handleOpenProjectDiscipline(record.PCode, \"process\")}>{record.completeProcess ? (<CheckIcon />) : (<ClearIcon />)}</TableCell>\r\n                                    <TableCell className={classes.iconCell} onClick={() => handleOpenProjectDiscipline(record.PCode, \"coordination\")}>{record.completeCoordination ? (<CheckIcon />) : (<ClearIcon />)}</TableCell>\r\n                                    <TableCell className={classes.iconCell} onClick={() => handleOpenProjectDiscipline(record.PCode, \"automation\")}>\r\n                                        {record.automation_Clarity_Nightly_Exports ? (<CheckIcon />) : (<ClearIcon />)}\r\n                                    </TableCell>\r\n                                    <TableCell>{record.updated_at ? (formatDistanceToNow(parseISO(record.updated_at))) + \" ago\" : (\"No data\")}</TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            ))}\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    );\r\n}","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles({\r\n  weather: {\r\n    marginRight: \"2.5%\",\r\n    marginLeft: \"2.5%\",\r\n    width: \"100%\",\r\n  },\r\n});\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles({\r\n  news: {\r\n    width: 900,\r\n    height: 500,\r\n    marginTop: 50,\r\n    marginBottom: 50,\r\n    margin: \"auto\",\r\n  },\r\n});\r\n","import React from \"react\"\r\n\r\n//Styles\r\nimport useStyles from './bm-news-styles.js';\r\n\r\n//Material UI Components\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nexport default function BMNews() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            {/* <iframe className={classes.news} src=\"https://arup.sharepoint.com/_layouts/15/sharepoint.aspx?v=news&spStartSource=spappbar\"\r\n             title=\"BM News\"></iframe> */}\r\n            <Typography variant=\"h6\">Arup News</Typography>\r\n            <br />\r\n            <Typography variant=\"body2\">This component will contain UKIMEA, BEM & Skills Network news</Typography>\r\n            <Typography variant=\"body2\">Currently Under Construction</Typography>\r\n            <Box sx={{height: 200}}/>\r\n        </div>\r\n    );\r\n}","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles({\r\n  box: {\r\n    marginBottom: 15,\r\n  },\r\n  toolbar: {\r\n    backgroundColor: \"#a8a8a8\",\r\n    paddingLeft: 0,\r\n  },\r\n  headerGrid: {\r\n    paddingLeft: 0,\r\n  },\r\n  popover: {\r\n    minWidth: 200,\r\n  },\r\n  popoverButton: {},\r\n});\r\n","import React from \"react\"\r\n\r\n//Material UI Components\r\nimport Box from '@mui/material/Box';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Popover from '@mui/material/Popover';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\n\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\n\r\n//Hooks\r\nimport useHooks from './hooks/use-hooks.js';\r\n\r\n//Styles\r\nimport useStyles from './header-styles.js'\r\n\r\nexport default function Header(props) {\r\n    const classes = useStyles();\r\n    const {\r\n        userData,\r\n        userImgData,\r\n        selectedBackground,\r\n        setSelectedBackground\r\n    } = props;\r\n    const {\r\n        togglePopover,\r\n        popoverOpen,\r\n        closePopover,\r\n        anchorEl,\r\n        handleChangeBackground,\r\n    }=useHooks(selectedBackground, setSelectedBackground);\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }} className={classes.box}>\r\n            <AppBar position=\"fixed\">{/* was static*/}\r\n                <Toolbar className={classes.toolbar} disableGutters>\r\n                    <Grid container>\r\n                        <Grid item xs={4} />\r\n                        <Grid item xs={4}>\r\n                            <Typography variant=\"h5\">Buildings Midlands Hub</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={2} />\r\n                        <Grid item xs={2}>\r\n                            <Button \r\n                                onClick={togglePopover}\r\n                                variant=\"contained\"\r\n                                className={classes.popoverButton}\r\n                                startIcon={<PersonIcon />}\r\n                            >\r\n                                {/*Add user profile image or blank person icon*/}\r\n                                Account\r\n                            </Button>\r\n                            <Popover\r\n                                open={popoverOpen}\r\n                                anchorEl={anchorEl}\r\n                                onClose={closePopover}\r\n                                anchorOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                className={classes.popover}\r\n                            >\r\n                                <Grid container alignItems=\"center\" className={classes.popover}>\r\n                                    <Grid item xs={4}>\r\n                                        {/* <PersonIcon fontSize=\"large\"/> */}\r\n                                        {/* Or show profile pic icon when logged in */}\r\n                                        <img src={\"data:image/jpeg;base64,\" + userImgData} />\r\n                                    </Grid>\r\n                                    <Grid item xs={8}>\r\n                                        <Typography>{userData.displayName}</Typography>\r\n                                        <Typography>{userData.officeLocation}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <FormControl component=\"fieldset\">\r\n                                    <FormLabel component=\"legend\">Background Image</FormLabel>\r\n                                    <RadioGroup\r\n                                        aria-label=\"background\"\r\n                                        name=\"controlled-radio-buttons-group\"\r\n                                        value={selectedBackground}\r\n                                        onChange={handleChangeBackground}\r\n                                    >\r\n                                        <FormControlLabel value=\"/static/media/Lemons.25a0929a.png\" control={<Radio />} label=\"Lemons\" />\r\n                                        <FormControlLabel value=\"/static/media/Cosmos.c6c9718e.png\" control={<Radio />} label=\"Cosmos\" />\r\n                                        <FormControlLabel value=\"/static/media/Koi.a797714b.png\" control={<Radio />} label=\"Koi\" />\r\n                                        <FormControlLabel value=\"/static/media/Circuit.6d04891f.png\" control={<Radio />} label=\"Circuit\" />\r\n                                    </RadioGroup>\r\n                                    </FormControl>\r\n                            </Popover>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    );\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nexport default (selectedBackground, setSelectedBackground) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const togglePopover = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const closePopover = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const popoverOpen = Boolean(anchorEl);\r\n\r\n  const handleChangeBackground = (event) => {\r\n    setSelectedBackground(event.target.value);\r\n    localStorage.setItem(\"selectedBackground\", event.target.value);\r\n  };\r\n\r\n  return {\r\n    togglePopover,\r\n    popoverOpen,\r\n    closePopover,\r\n    anchorEl,\r\n    handleChangeBackground,\r\n  };\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nconst axios = require(\"axios\");\r\n\r\nexport default (userData) => {\r\n  const [myProjects, setMyProjects] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const getData = () => {\r\n    setLoading(true);\r\n    axios\r\n      .get(\"https://projectapprovalstracker.arup.com/api/getpwadata\")\r\n      .then(function (response) {\r\n        getMyProjects(response.data);\r\n      });\r\n  };\r\n\r\n  const getMyProjects = (allData) => {\r\n    let newProjects = [];\r\n    allData.currentData.map((project) => {\r\n      // Replace with this for live: if (Object.values(project).includes(userData.account.name)) {\r\n      if (Object.values(project).includes(\"Colin Magner\")) {\r\n        newProjects.push(project);\r\n      }\r\n    });\r\n    console.log(\"myProjects filtered: \", newProjects);\r\n    setMyProjects(newProjects);\r\n  };\r\n\r\n  const getMyRoles = () => {\r\n    myProjects.map((project) => {\r\n      let myRoles = [];\r\n      for (const prop in project) {\r\n        // Replace with this for live:  if (project[prop] === userData.account.name) {\r\n        if (project[prop] === \"Colin Magner\") {\r\n          let displayProp = \"\";\r\n          switch (prop) {\r\n            case \"Approver_B_name\":\r\n              displayProp = \"Approver BIM\";\r\n              break;\r\n            case \"Approver_C_name\":\r\n              displayProp = \"Approver Civil\";\r\n              break;\r\n            case \"Approver_E_name\":\r\n              displayProp = \"Approver Electrical\";\r\n              break;\r\n            case \"Approver_M_name\":\r\n              displayProp = \"Approver Mechanical\";\r\n              break;\r\n            case \"Approver_P_name\":\r\n              displayProp = \"Approver Public Health\";\r\n              break;\r\n            case \"Approver_S_name\":\r\n              displayProp = \"Approver Structural\";\r\n              break;\r\n            case \"Checker_B_name\":\r\n              displayProp = \"Checker BIM\";\r\n              break;\r\n            case \"Checker_C_name\":\r\n              displayProp = \"Checker Civil\";\r\n              break;\r\n            case \"Checker_E_name\":\r\n              displayProp = \"Checker Electrical\";\r\n              break;\r\n            case \"Checker_M_name\":\r\n              displayProp = \"Checker Mechanical\";\r\n              break;\r\n            case \"Checker_P_name\":\r\n              displayProp = \"Checker Public Health\";\r\n              break;\r\n            case \"Checker_S_name\":\r\n              displayProp = \"Checker Structural\";\r\n              break;\r\n            case \"Engineer_B_name\":\r\n              displayProp = \"Lead BIM\";\r\n              break;\r\n            case \"Engineer_C_name\":\r\n              displayProp = \"Lead Civil\";\r\n              break;\r\n            case \"Engineer_E_name\":\r\n              displayProp = \"Lead Electrical\";\r\n              break;\r\n            case \"Engineer_M_name\":\r\n              displayProp = \"Lead Mechanical\";\r\n              break;\r\n            case \"Engineer_P_name\":\r\n              displayProp = \"Lead Public Health\";\r\n              break;\r\n            case \"Engineer_S_name\":\r\n              displayProp = \"Lead Structural\";\r\n              break;\r\n            case \"ProjectDirectorName\":\r\n              displayProp = \"Project Director\";\r\n              break;\r\n            case \"ProjectManagerName\":\r\n              displayProp = \"Project Manager\";\r\n              break;\r\n            default:\r\n              displayProp = prop;\r\n          }\r\n          myRoles.push(displayProp);\r\n        }\r\n      }\r\n      project.myRoles = myRoles;\r\n    });\r\n    setMyProjects(myProjects);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (myProjects.length > 0) {\r\n      getMyRoles();\r\n    }\r\n    console.log(\"role filtered projects\", myProjects);\r\n  }, [myProjects]);\r\n\r\n  return {\r\n    myProjects,\r\n    loading,\r\n  };\r\n};\r\n","import React from \"react\"\r\n\r\n//Hooks\r\nimport useHooks from './hooks/use-hooks.js'\r\n\r\n//Material UI Components\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default function MyProjects(props) {\r\n    const {\r\n        userData\r\n    } = props;\r\n    const {\r\n        myProjects,\r\n        loading\r\n    } = useHooks(userData);\r\n    return (\r\n        <div>\r\n            {!loading && (\r\n            <TableContainer component={Paper}>\r\n                <Table stickyHeader size=\"small\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Project Name</TableCell>\r\n                            <TableCell>My Roles</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {myProjects.map((project) => (\r\n                            <TableRow>\r\n                                <TableCell>{project.ProjectCode}</TableCell>\r\n                                <TableCell>{project.myRoles.map((role) => (role)).join(\", \")}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            \r\n            )}\r\n        </div>\r\n    );\r\n}","import React from \"react\"\r\n\r\n//Hooks\r\n\r\n//Material UI Components\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Welcome() {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h6\"><b>Welcome to your BM Hub</b></Typography>\r\n            <Typography variant=\"subtitle1\" align=\"left\" style={{marginLeft: '3%'}}>Changelog:</Typography>\r\n            <Typography variant=\"body2\" align=\"left\" style={{marginLeft: '5%'}}>\r\n            <b>-</b> Added Project Role Tracker <br />\r\n            <b>-</b> Backgrounds are available in the Account tab! Spice up your hub now!<br />\r\n            <b>-</b> NOTE: BIM Tracker & Project Role Tracker are currently locked to Colin Magner\r\n            </Typography>\r\n        </div>\r\n    );\r\n}","import React from \"react\"\r\n\r\n//Styles\r\n\r\n//Material UI Components\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nexport default function ComingSoon() {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h6\">Coming Soon</Typography>\r\n            <br />\r\n            <Typography variant=\"body2\">Trackers such as 30 day review, PM/PD tools and more</Typography>\r\n            <Typography variant=\"body2\">Possible PaT integration. Plan your time from your Desktop!</Typography>\r\n            <Box sx={{height: 200}}/>\r\n        </div>\r\n    );\r\n}","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles({\r\n  loginScreen: {\r\n    margin: \"auto\",\r\n    marginTop: \"20%\",\r\n  },\r\n  weatherGrid: {\r\n    marginLeft: \"1.25%\",\r\n    marginRight: \"2.5%\",\r\n    width: \"35%\",\r\n  },\r\n  spacerDiv: {\r\n    height: 64,\r\n  },\r\n  content: {\r\n    marginLeft: \"2%\",\r\n    marginRight: \"2%\",\r\n  },\r\n  contentGridRow: {\r\n    paddingBottom: \"1%\",\r\n  },\r\n});\r\n","import React from \"react\"\r\nimport MicrosoftLogin from \"react-microsoft-login\";\r\n\r\n//Material UI Components\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@mui/material/Card';\r\n\r\n\r\n//Hooks\r\nimport useHooks from './hooks/use-hooks.js';\r\n\r\n//Project Components\r\nimport MyCalcs from '../my-calcs';\r\nimport MyBIMTracker from '../my-bim-tracker';\r\nimport BMWeather from \"../bm-weather\";\r\nimport BMNews from '../bm-news';\r\nimport Header from '../header';\r\nimport MyProjects from '../my-projects';\r\nimport Welcome from '../welcome';\r\nimport ComingSoon from '../coming-soon';\r\n\r\n//Styles\r\nimport useStyles from './main-hub-styles';\r\n\r\nexport default function MainHub() {\r\n    const {\r\n        handleNotification,\r\n        loggedIn,\r\n        authHandler,\r\n        userData,\r\n        userImgData,\r\n        selectedBackground,\r\n        setSelectedBackground\r\n    } = useHooks();\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n        {!loggedIn && <MicrosoftLogin clientId=\"2b4cf606-ac2c-4532-a7b0-483d7f2427cc\" authCallback={authHandler} className={classes.loginScreen} useLocalStorageCache withUserData/>}\r\n        {loggedIn && \r\n        <div className={classes.wholePage} style={{backgroundImage: `url(${selectedBackground})`}}>\r\n            <Header\r\n                userData={userData}\r\n                userImgData={userImgData}\r\n                selectedBackground={selectedBackground}\r\n                setSelectedBackground={setSelectedBackground}\r\n            />\r\n            <div className={classes.spacerDiv}/>\r\n            <div className={classes.content}>\r\n                <Grid container direction=\"row\" spacing={2} className={classes.contentGridRow}>\r\n                    <Grid item xs={7}>\r\n                        <Card>\r\n                            <MyCalcs userData={userData} />\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={5}>\r\n                        <Card>\r\n                            <Welcome />\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container direction=\"row\" spacing={2} className={classes.contentGridRow}>\r\n                    <Grid item xs={7}>\r\n                        <Card>\r\n                            <MyBIMTracker \r\n                                userData={userData}\r\n                            />\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={5}>\r\n                        <Card>\r\n                            <MyProjects\r\n                                userData={userData}\r\n                            />\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container direction=\"row\" spacing={2} className={classes.contentGridRow}>\r\n                    <Grid item xs={6}>\r\n                        <Card>\r\n                            <BMNews />\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Card>\r\n                            <ComingSoon />\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n        }\r\n        </div>\r\n    );\r\n}","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport MainHub from \"./main-hub\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainHub />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\"This web app is being served cache-first by a service \");\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: {\r\n      \"Service-Worker\": \"script\",\r\n    },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.register();\nreportWebVitals();\n"],"sourceRoot":""}