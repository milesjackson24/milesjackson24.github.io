{"version":3,"sources":["main-hub/hooks/use-hooks.js","backgrounds/Lemons.png","backgrounds/Cosmos.png","backgrounds/Koi.png","backgrounds/Circuit.png","logo.svg","my-calcs/hooks/use-hooks.js","my-calcs/my-calcs-styles.js","my-calcs/my-calcs.jsx","my-bim-tracker/hooks/use-hooks.js","my-bim-tracker/my-bim-tracker-styles.js","my-bim-tracker/my-bim-tracker.jsx","bm-weather/bm-weather-styles.js","bm-news/bm-news-styles.js","bm-news/bm-news.jsx","header/header-styles.js","header/header.jsx","header/hooks/use-hooks.js","my-projects/hooks/use-hooks.js","my-projects/my-projects-styles.js","my-projects/my-projects.jsx","welcome/welcome.jsx","coming-soon/coming-soon.jsx","main-hub/main-hub-styles.js","main-hub/main-hub.jsx","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["useState","sendNotification","setSendNotification","loggedIn","setLoggedIn","userData","setUserData","userImgData","setUserImgData","localStorage","getItem","Lemons","selectedBackground","setSelectedBackground","handleNotification","Notification","requestPermission","then","onclick","event","preventDefault","window","open","useEffect","console","log","authHandler","err","data","axios","get","cache","responseType","headers","accessToken","photo","newImgData","Buffer","from","toString","require","myCalcs","setMyCalcs","newCalcs","setNewCalcs","notificationSent","setNotificationSent","getMyCalcs","account","userName","response","calcs","checkForCalcs","setInterval","clearInterval","length","completeCalc","calc","ProjectCode","makeStyles","table","maxHeight","overflowY","helpIcon","color","paddingTop","helpTooltipSpan","maxWidth","fontSize","MainHub","props","useHooks","classes","useStyles","Grid","container","direction","alignItems","item","xs","Typography","variant","Tooltip","title","className","placement","TableContainer","component","Paper","Table","stickyHeader","size","TableHead","TableCell","TableBody","map","TableRow","calculation","JobNameShort","stage","Button","onClick","calculation_id","href","target","rel","margin","cellRed","cellAmber","cellGreen","cellYellow","tableHeader","fontWeight","jobNameCell","width","cursor","projectCodeCell","paddingRight","iconHeader","paddingBottom","paddingLeft","iconCell","healthCell","accordionContainer","accordionProjectStatus","subtitle","MyBIMTracker","myRecords","setMyRecords","bimLeadRecords","setBimLeadRecords","bimCheckerApproverRecords","setBimCheckerApproverRecords","expandTables","setExpandTables","getRecords","getProgress","records","record","completePeople","completeStorage","completeProcess","completeCoordination","Approver_B_name","Checker_B_name","CoordinationManager","Engineer_B_name","storage_CDE","storage_C_Models","storage_Clarity_BIM_360_Backup","storage_MEP_Models","storage_S_Models","process_BEP_Status","process_EIR_Status","process_Information_Deliverables","process_Responsibility_Matrix_Status","coordination_Internal_Coord_Meetings","coordination_Issue_Tracking","coordination_Whole_Team_Coord_Meetings","interval","newBIMLeadRecords","newBIMCheckerApproverRecords","name","push","handleExpandTables","handleOpenProject","projectCode","url","handleOpenProjectDiscipline","discipline","align","Accordion","AccordionSummary","expandIcon","projectStatus","sx","PCode","AccordionDetails","automation_Clarity_Nightly_Exports","updated_at","formatDistanceToNow","parseISO","weather","marginRight","marginLeft","news","height","marginTop","marginBottom","BMNews","Box","box","toolbar","backgroundColor","headerGrid","popover","minWidth","backgroundForm","userAvatar","popoverButton","Header","anchorEl","setAnchorEl","togglePopover","currentTarget","popoverOpen","Boolean","closePopover","handleChangeBackground","value","setItem","flexGrow","AppBar","position","style","Toolbar","disableGutters","startIcon","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","disableScrollLock","Avatar","src","displayName","officeLocation","Divider","FormControl","RadioGroup","onChange","FormControlLabel","control","Radio","label","myProjects","setMyProjects","loading","setLoading","getMyProjects","allData","newProjects","currentData","project","Object","values","includes","myRoles","prop","displayProp","titleCell","titleTooltip","MyProjects","enterDelay","noWrap","role","join","Welcome","ComingSoon","loginScreen","weatherGrid","spacerDiv","content","contentGridRow","wholePage","minHeight","backgroundSize","Alert","severity","clientId","authCallback","useLocalStorageCache","withUserData","backgroundImage","spacing","Card","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"0LAWe,eACb,MAAgDA,oBAAS,GAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAsCN,mBAAS,IAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAAoDR,mBAClDS,aAAaC,QAAQ,sBACjBD,aAAaC,QAAQ,sBACrBC,KAHN,mBAAOC,EAAP,KAA2BC,EAA3B,KAyBMC,EAAqB,WACzBC,aAAaC,oBAAoBC,MAAK,WACjB,IAAIF,aACrB,0DAEWG,QAAU,SAAUC,GAC/BA,EAAMC,iBACNC,OAAOC,KACL,yDACA,eAiBR,OAXAC,qBAAU,WACR,GAAItB,EAAkB,CAElBuB,QAAQC,IAAI,sBAGdX,IACAZ,GAAoB,MAErB,CAACD,IAEG,CACLa,qBACAX,WACAuB,YAhDkB,SAACC,EAAKC,GACxBJ,QAAQC,IAAIE,EAAKC,GACbA,IAEFC,IACGC,IAAI,mDAAoD,CACvDC,OAAO,EACPC,aAAc,cACdC,QAAS,CAAE,cAAiB,UAAYL,EAAKM,eAE9CjB,MAAK,SAACkB,GACL,IAAMC,EAAa,0BAA4BC,EAAOC,KAAKH,EAAMP,KAAM,UAAUW,SAAS,UAC1F/B,EAAe4B,MAEnB9B,EAAYsB,GACZxB,GAAY,KAkCdC,WACAE,cACAK,qBACAC,4B,2DC1EW,QAA0B,oC,6ECA1B,K,iCCAA,K,iCCAA,K,uFCAA,I,8KCCTgB,EAAQW,EAAQ,IAEP,WAACnC,GACd,MAA8BL,mBAAS,IAAvC,mBAAOyC,EAAP,KAAgBC,EAAhB,KACA,EAAgC1C,mBAAS,IAAzC,mBAAO2C,EAAP,KAAiBC,EAAjB,KACA,EAAgD5C,oBAAS,GAAzD,mBAAO6C,EAAP,KAAyBC,EAAzB,KAEMC,EAAa,WACjBlB,EACGC,IADH,gEAE6DzB,EAAS2C,QAAQC,WAG3EhC,MAAK,SAAUiC,GACdR,EAAWQ,EAAStB,KAAKuB,WAe/B5B,qBAAU,WACRwB,IACAH,EAAYH,KACX,IAEHlB,qBAAU,WACR,IAAM6B,EAAgBC,aAAY,WAEhC,OAlBFxB,EACGC,IADH,gEAE6DzB,EAAS2C,QAAQC,WAG3EhC,MAAK,SAAUiC,GACdN,EAAYM,EAAStB,KAAKuB,UAYrB,kBAAMG,cAAcF,MAC1B,OACF,IAEH7B,qBAAU,WACJoB,EAASY,OAASd,EAAQc,OAE5BxC,aAAaC,oBAAoBC,MAAK,WACjB,IAAIF,aACrB,0CAEWG,QAAU,SAAUC,GAC/BA,EAAMC,iBACNC,OAAOC,KACL,oDACA,cAIGqB,EAASY,OAASd,EAAQc,QAEnCxC,aAAaC,oBAAoBC,MAAK,WACpC,IAAIF,aAAJ,0DACqD4B,EAASY,OAD9D,oBAKJ/B,QAAQC,IAAIkB,EAAUF,GACtBK,GAAoB,KACnB,CAACH,IAEJpB,qBAAU,YACiB,IAArBsB,IACFE,IACAD,GAAoB,IAEtBtB,QAAQC,IAAIgB,EAASE,KACpB,CAACE,IASJ,MAAO,CACLJ,UACAe,aATmB,SAACC,GACpBpC,OAAOC,KAAP,4DACuDmC,EAAKC,aAC1D,a,SC9ESC,cAAW,CACxBC,MAAO,CAKLC,UAAW,IACXC,UAAW,QAEbC,SAAU,CACRC,MAAO,UACPC,WAAY,GAEdC,gBAAiB,CACfC,SAAU,GACVC,SAAU,M,OCMC,SAASC,EAAQC,GAC5B,IACIjE,EACDiE,EADCjE,SAEJ,EAGIkE,EAASlE,GAFToC,EADJ,EACIA,QACAe,EAFJ,EAEIA,aAEEgB,EAAUC,IAChB,OACI,gCACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,WAAW,SAA3C,UACI,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,2BAEJ,cAACP,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACI,cAACG,EAAA,EAAD,CAASC,MACL,sBAAMC,UAAWZ,EAAQN,gBAAzB,2LAKAmB,UAAU,aANd,SAQI,cAAC,IAAD,CAAiBjB,SAAS,QAAQgB,UAAWZ,EAAQT,kBAIhEtB,EAAQc,OAAS,EAClB,cAAC+B,EAAA,EAAD,CAAgBC,UAAWC,IAAOJ,UAAWZ,EAAQZ,MAArD,SACI,eAAC6B,EAAA,EAAD,CAAOC,cAAY,EAACC,KAAK,QAAzB,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,+BACA,cAACA,EAAA,EAAD,2BACA,cAACA,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,OAEJ,cAACC,EAAA,EAAD,UACKrD,EAAQsD,KAAI,SAACtC,GAAD,OACZ,eAACuC,EAAA,EAAD,WACI,cAACH,EAAA,EAAD,UAAYpC,EAAKwC,cACjB,cAACJ,EAAA,EAAD,UAAYpC,EAAKyC,eACjB,cAACL,EAAA,EAAD,UAAYpC,EAAK0C,QACjB,cAACN,EAAA,EAAD,UAAW,cAACO,EAAA,EAAD,CAAQnB,QAAQ,YAAYjB,MAAM,UAAUqC,QAAS,kBAAM7C,EAAaC,IAAxE,0BAJAA,EAAK6C,0BAWjC,eAACtB,EAAA,EAAD,CAAYC,QAAQ,QAApB,wEAC+D,uBAD/D,+CAEgD,uBAC5C,mBAAGsB,KAAK,4CAA4CC,OAAO,SAASC,IAAI,aAAxE,wBAHJ,SAII,mBAAGF,KAAK,4CAA4CC,OAAO,SAASC,IAAI,aAAxE,wBAJJ,SAKI,mBAAGF,KAAK,4CAA4CC,OAAO,SAASC,IAAI,aAAxE,8B,+BC7EV5E,EAAQW,EAAQ,I,8LCCPmB,eAAW,CACxBC,MAAO,CACLO,SAAU,OACVuC,OAAQ,OACR7C,UAAW,IACXC,UAAW,QAEb6C,QAAS,CACP3C,MAAO,WAET4C,UAAW,CACT5C,MAAO,WAET6C,UAAW,CACT7C,MAAO,WAET8C,WAAY,CACV9C,MAAO,WAET+C,YAAa,CACXC,WAAY,QAEdC,YAAa,CACXC,MAAO,IACPC,OAAQ,WAEVC,gBAAiB,CACfF,MAAO,GACPG,aAAc,EACdF,OAAQ,WAEVG,WAAY,CACVrD,WAAY,EACZsD,cAAe,EACfC,YAAa,EACbH,aAAc,GAEhBI,SAAU,CACRxD,WAAY,EACZsD,cAAe,EACfC,YAAa,EACbH,aAAc,EACdF,OAAQ,WAEVO,WAAY,GAGZC,mBAAoB,CAClB9D,UAAW,IACXC,UAAW,QAEb8D,uBAAwB,CACtBP,aAAc,IAEhBQ,SAAU,CACRL,YAAa,KACbvD,WAAY,MAEdF,SAAU,CACRC,MAAO,UACPC,WAAY,GAEdC,gBAAiB,CACfC,SAAU,IACVC,SAAU,MCjCC,SAAS0D,GAAaxD,GACjC,IAGA,EFlCW,SAACjE,GACd,MAAkCL,mBAAS,IAA3C,mBAAO+H,EAAP,KAAkBC,EAAlB,KACA,EAA4ChI,mBAAS,IAArD,mBAAOiI,EAAP,KAAuBC,EAAvB,KACA,EAAkElI,mBAChE,IADF,mBAAOmI,EAAP,KAAkCC,EAAlC,KAGA,EAAwCpI,oBAAS,GAAjD,mBAAOqI,EAAP,KAAqBC,EAArB,KAEMC,EAAa,WACjB1G,EACGC,IAAI,0DACJb,MAAK,SAAUiC,GACdsF,EAAYtF,EAAStB,UAMrB4G,EAAc,SAAC5G,GACnB,IAAM6G,EAAU7G,EAAKmE,KAAI,SAAC2C,GACxB,IAAIC,GAAiB,EACjBC,GAAkB,EAClBC,GAAkB,EAClBC,GAAuB,EAsC3B,OApCEJ,EAAOK,iBACPL,EAAOM,gBACPN,EAAOO,qBACPP,EAAOQ,kBAEPP,GAAiB,GAGjBD,EAAOS,aACPT,EAAOU,kBACPV,EAAOW,gCACPX,EAAOY,oBACPZ,EAAOa,mBAEPX,GAAkB,GAIlBF,EAAOc,oBAGPd,EAAOe,oBACPf,EAAOgB,kCAEPhB,EAAOiB,uCAEPd,GAAkB,GAGlBH,EAAOkB,sCACPlB,EAAOmB,6BAEPnB,EAAOoB,yCAEPhB,GAAuB,GAElB,2BACFJ,GADL,IAEEC,iBACAC,kBACAC,kBACAC,4BAGJd,EAAaS,IAuDf,OAjCAlH,qBAAU,WACRgH,IACA,IAAMwB,EAAW1G,aAAY,WAC3BkF,MACC,KACH,OAAO,kBAAMjF,cAAcyG,MAC1B,IAEHxI,qBAAU,WACR,GAAIwG,EAAUxE,OAAS,EAAG,CACxB,IAAIyG,EAAoB,GACpBC,EAA+B,GACnClC,EAAUhC,KAAI,SAAC2C,GACTA,EAAOQ,kBAAoB7I,EAAS2C,QAAQkH,MAE9CF,EAAkBG,KAAKzB,GAGvBA,EAAOM,iBAAmB3I,EAAS2C,QAAQkH,MAC3CxB,EAAOK,kBAAoB1I,EAAS2C,QAAQkH,MAM5CD,EAA6BE,KAAKzB,MAGtCR,EAAkB8B,GAClB5B,EAA6B6B,MAE9B,CAAClC,IAEG,CACLA,YACAE,iBACAE,4BACAiC,mBAxDyB,WACzB9B,GAAiBD,IAwDjBA,eACAgC,kBAtDwB,SAACC,GACzB,IAAIC,EACF,qDAAuDD,EACzDjJ,OAAOC,KAAKiJ,IAoDZC,4BAjDkC,SAACF,EAAaG,GAChD,IAAIF,EACF,qDACAD,EACA,eACAG,EACFpJ,OAAOC,KAAKiJ,KE9CRhG,CATAD,EADAjE,UAIA4H,GAFJ,EACIF,UADJ,EAEIE,gBACAE,EAHJ,EAGIA,0BAIAqC,GAPJ,EAIIJ,mBAJJ,EAKI/B,aALJ,EAMIgC,kBANJ,EAOIG,6BAIEhG,EAAUC,KAChB,OACI,gCACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,WAAW,SAA3C,UACI,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,4BAEJ,cAACP,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACI,cAACG,EAAA,EAAD,CAASC,MACL,sBAAMC,UAAWZ,EAAQN,gBAAzB,2QAKAmB,UAAU,aANd,SAQI,cAAC,IAAD,CAAiBjB,SAAS,QAAQgB,UAAWZ,EAAQT,kBAIjE,sBAAKqB,UAAWZ,EAAQmD,mBAAxB,UACCQ,EAA0B5E,OAAS,GAAK,qCACzC,cAACyB,EAAA,EAAD,CAAYC,QAAQ,YAAYyF,MAAM,OAAOtF,UAAWZ,EAAQqD,SAAhE,wCACCM,EAA0BpC,KAAI,SAAC2C,GAAD,OAC3B,eAACiC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CACIC,WAAY,cAAC,KAAD,CAAgBzG,SAAS,UADzC,UAGI,qBAAKgB,UAAWZ,EAAQoD,uBAAxB,SACA,cAAC1C,EAAA,EAAD,CAASG,UAAU,MAAMF,MAAO,IAAMuD,EAAOoC,cAAgB,EACvD,KACA,IAAMpC,EAAOoC,cAAgB,IAFnC,SAII,cAAC,IAAD,CAAc1G,SAAS,QAAQgB,UAAW,IAAMsD,EAAOoC,cAAgB,GAAMtG,EAAQmC,QAChF,IAAM+B,EAAOoC,cAAgB,GAAMtG,EAAQoC,UAC3C,IAAM8B,EAAOoC,cAAgB,IAAOtG,EAAQsC,WAAetC,EAAQqC,gBAI5E,eAAC7B,EAAA,EAAD,CAAYC,QAAQ,QAAQ8F,GAAI,CAAC7D,MAAO,OAAxC,UACKwB,EAAOsC,MADZ,IACoBtC,EAAOxC,mBAG/B,cAAC+E,EAAA,EAAD,UACI,eAACxF,EAAA,EAAD,WACI,eAACG,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWT,UAAWZ,EAAQ8C,WAA9B,SAA0C,cAACpC,EAAA,EAAD,CAASC,MAAM,SAASE,UAAU,MAAlC,SAAwC,cAAC,IAAD,QAClF,cAACQ,EAAA,EAAD,CAAWT,UAAWZ,EAAQ8C,WAA9B,SAA0C,cAACpC,EAAA,EAAD,CAASC,MAAM,UAAUE,UAAU,MAAnC,SAAyC,cAAC,IAAD,QACnF,cAACQ,EAAA,EAAD,CAAWT,UAAWZ,EAAQ8C,WAA9B,SAA0C,cAACpC,EAAA,EAAD,CAASC,MAAM,UAAUE,UAAU,MAAnC,SAAyC,cAAC,IAAD,QACnF,cAACQ,EAAA,EAAD,CAAWT,UAAWZ,EAAQ8C,WAA9B,SAA0C,cAACpC,EAAA,EAAD,CAASC,MAAM,eAAeE,UAAU,MAAxC,SAA8C,cAAC,IAAD,QACxF,cAACQ,EAAA,EAAD,CAAWT,UAAWZ,EAAQ8C,WAA9B,SAA0C,cAACpC,EAAA,EAAD,CAASC,MAAM,aAAaE,UAAU,MAAtC,SAA4C,cAAC,IAAD,QACtF,cAACQ,EAAA,EAAD,CAAWT,UAAWZ,EAAQuC,YAA9B,6BAEJ,cAACjB,EAAA,EAAD,UACI,eAACE,EAAA,EAAD,WACI,cAACH,EAAA,EAAD,CAAWT,UAAWZ,EAAQiD,SAAUpB,QAAS,kBAAMmE,EAA4B9B,EAAOsC,MAAO,WAAjG,SAA6GtC,EAAOC,eAAkB,cAAC,IAAD,IAAkB,cAAC,KAAD,MACxJ,cAAC9C,EAAA,EAAD,CAAWT,UAAWZ,EAAQiD,SAAUpB,QAAS,kBAAMmE,EAA4B9B,EAAOsC,MAAO,YAAjG,SAA8GtC,EAAOE,gBAAmB,cAAC,IAAD,IAAkB,cAAC,KAAD,MAC1J,cAAC/C,EAAA,EAAD,CAAWT,UAAWZ,EAAQiD,SAAUpB,QAAS,kBAAMmE,EAA4B9B,EAAOsC,MAAO,YAAjG,SAA8GtC,EAAOG,gBAAmB,cAAC,IAAD,IAAkB,cAAC,KAAD,MAC1J,cAAChD,EAAA,EAAD,CAAWT,UAAWZ,EAAQiD,SAAUpB,QAAS,kBAAMmE,EAA4B9B,EAAOsC,MAAO,iBAAjG,SAAmHtC,EAAOI,qBAAwB,cAAC,IAAD,IAAkB,cAAC,KAAD,MACpK,cAACjD,EAAA,EAAD,CAAWT,UAAWZ,EAAQiD,SAAUpB,QAAS,kBAAMmE,EAA4B9B,EAAOsC,MAAO,eAAjG,SACKtC,EAAOwC,mCAAsC,cAAC,IAAD,IAAkB,cAAC,KAAD,MAEpE,cAACrF,EAAA,EAAD,UAAY6C,EAAOyC,WAAcC,YAAoBC,YAAS3C,EAAOyC,aAAgB,OAAU,+BAQtHlD,EAAe1E,OAAS,GAAK,qCAC9B,cAACyB,EAAA,EAAD,CAAYC,QAAQ,YAAYyF,MAAM,OAAOtF,UAAWZ,EAAQqD,SAAhE,6BACCI,EAAelC,KAAI,SAAC2C,GAAD,OAChB,eAACiC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CACIC,WAAY,cAAC,KAAD,CAAgBzG,SAAS,UADzC,UAGI,qBAAKgB,UAAWZ,EAAQoD,uBAAxB,SACA,cAAC1C,EAAA,EAAD,CAASG,UAAU,MAAMF,MAAO,IAAMuD,EAAOoC,cAAgB,EACvD,KACA,IAAMpC,EAAOoC,cAAgB,IAFnC,SAII,cAAC,IAAD,CAAc1G,SAAS,QAAQgB,UAAW,IAAMsD,EAAOoC,cAAgB,GAAMtG,EAAQmC,QAChF,IAAM+B,EAAOoC,cAAgB,GAAMtG,EAAQoC,UAC3C,IAAM8B,EAAOoC,cAAgB,IAAOtG,EAAQsC,WAAetC,EAAQqC,gBAI5E,eAAC7B,EAAA,EAAD,CAAYC,QAAQ,QAApB,UACKyD,EAAOsC,MADZ,IACoBtC,EAAOxC,mBAG/B,cAAC+E,EAAA,EAAD,UACI,eAACxF,EAAA,EAAD,WACI,eAACG,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWT,UAAWZ,EAAQ8C,WAA9B,SAA0C,cAACpC,EAAA,EAAD,CAASC,MAAM,SAASE,UAAU,MAAlC,SAAwC,cAAC,IAAD,QAClF,cAACQ,EAAA,EAAD,CAAWT,UAAWZ,EAAQ8C,WAA9B,SAA0C,cAACpC,EAAA,EAAD,CAASC,MAAM,UAAUE,UAAU,MAAnC,SAAyC,cAAC,IAAD,QACnF,cAACQ,EAAA,EAAD,CAAWT,UAAWZ,EAAQ8C,WAA9B,SAA0C,cAACpC,EAAA,EAAD,CAASC,MAAM,UAAUE,UAAU,MAAnC,SAAyC,cAAC,IAAD,QACnF,cAACQ,EAAA,EAAD,CAAWT,UAAWZ,EAAQ8C,WAA9B,SAA0C,cAACpC,EAAA,EAAD,CAASC,MAAM,eAAeE,UAAU,MAAxC,SAA8C,cAAC,IAAD,QACxF,cAACQ,EAAA,EAAD,CAAWT,UAAWZ,EAAQ8C,WAA9B,SAA0C,cAACpC,EAAA,EAAD,CAASC,MAAM,aAAaE,UAAU,MAAtC,SAA4C,cAAC,IAAD,QACtF,cAACQ,EAAA,EAAD,CAAWT,UAAWZ,EAAQuC,YAA9B,6BAEJ,cAACjB,EAAA,EAAD,UACI,eAACE,EAAA,EAAD,WACI,cAACH,EAAA,EAAD,CAAWT,UAAWZ,EAAQiD,SAAUpB,QAAS,kBAAMmE,EAA4B9B,EAAOsC,MAAO,WAAjG,SAA6GtC,EAAOC,eAAkB,cAAC,IAAD,IAAkB,cAAC,KAAD,MACxJ,cAAC9C,EAAA,EAAD,CAAWT,UAAWZ,EAAQiD,SAAUpB,QAAS,kBAAMmE,EAA4B9B,EAAOsC,MAAO,YAAjG,SAA8GtC,EAAOE,gBAAmB,cAAC,IAAD,IAAkB,cAAC,KAAD,MAC1J,cAAC/C,EAAA,EAAD,CAAWT,UAAWZ,EAAQiD,SAAUpB,QAAS,kBAAMmE,EAA4B9B,EAAOsC,MAAO,YAAjG,SAA8GtC,EAAOG,gBAAmB,cAAC,IAAD,IAAkB,cAAC,KAAD,MAC1J,cAAChD,EAAA,EAAD,CAAWT,UAAWZ,EAAQiD,SAAUpB,QAAS,kBAAMmE,EAA4B9B,EAAOsC,MAAO,iBAAjG,SAAmHtC,EAAOI,qBAAwB,cAAC,IAAD,IAAkB,cAAC,KAAD,MACpK,cAACjD,EAAA,EAAD,CAAWT,UAAWZ,EAAQiD,SAAUpB,QAAS,kBAAMmE,EAA4B9B,EAAOsC,MAAO,eAAjG,SACKtC,EAAOwC,mCAAsC,cAAC,IAAD,IAAkB,cAAC,KAAD,MAEpE,cAACrF,EAAA,EAAD,UAAY6C,EAAOyC,WAAcC,YAAoBC,YAAS3C,EAAOyC,aAAgB,OAAU,kCAS5F,IAA1BlD,EAAe1E,QAAqD,IAArC4E,EAA0B5E,QAC1D,eAACyB,EAAA,EAAD,CAAYC,QAAQ,QAApB,yDACgD,uBADhD,yBAE0B,mBAAGsB,KAAK,uCAAuCC,OAAO,SAASC,IAAI,aAAnE,kBAF1B,+B,OCvKG9C,YAAW,CACxB2H,QAAS,CACPC,YAAa,OACbC,WAAY,OACZtE,MAAO,UCJIvD,mBAAW,CACxB8H,KAAM,CACJvE,MAAO,IACPwE,OAAQ,IACRC,UAAW,GACXC,aAAc,GACdlF,OAAQ,U,UCCG,SAASmF,KACJpH,KAChB,OACI,gCAGI,cAACO,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBACA,uBACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,2EACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,0CACA,cAAC6G,GAAA,EAAD,CAAKf,GAAI,CAACW,OAAQ,U,kHCjBf/H,eAAW,CACxBoI,IAAK,CACHH,aAAc,IAEhBI,QAAS,CAEPC,gBAAiB,WAEnB9G,MAAO,CACLnB,MAAO,SAETkI,WAAY,CACV1E,YAAa,GAEf2E,QAAS,CACPC,SAAU,IACV7E,cAAe,GAEjB8E,eAAgB,CACd7E,YAAa,MAEf8E,WAAY,CACV9E,YAAa,EACbvD,WAAY,GAEdsI,cAAe,KCDF,SAASC,GAAOlI,GAC3B,IAAME,EAAUC,KAEZpE,EAIAiE,EAJAjE,SACAE,EAGA+D,EAHA/D,YACAK,EAEA0D,EAFA1D,mBAGJ,EChCW,SAACA,EAAoBC,GAClC,MAAgCb,mBAAS,MAAzC,mBAAOyM,EAAP,KAAiBC,EAAjB,KAgBA,MAAO,CACLC,cAfoB,SAACxL,GACrBuL,EAAYvL,EAAMyL,gBAelBC,YATkBC,QAAQL,GAU1BM,aAbmB,WACnBL,EAAY,OAaZD,WACAO,uBAV6B,SAAC7L,GAC9BN,EAAsBM,EAAMqF,OAAOyG,OACnCxM,aAAayM,QAAQ,qBAAsB/L,EAAMqF,OAAOyG,SDwBtD1I,CAAS3D,EAPP0D,EADAzD,uBAGA8L,EADJ,EACIA,cACAE,EAFJ,EAEIA,YACAE,EAHJ,EAGIA,aACAN,EAJJ,EAIIA,SACAO,EALJ,EAKIA,uBAGJ,OACI,cAAClB,GAAA,EAAD,CAAKf,GAAI,CAAEoC,SAAU,GAAK/H,UAAWZ,EAAQuH,IAA7C,SACI,cAACqB,GAAA,EAAD,CAAQC,SAAS,QAAQC,MAAO,CAACrB,gBAAiB,WAAlD,SACI,cAACsB,GAAA,EAAD,CAASnI,UAAWZ,EAAQwH,QAASwB,gBAAc,EAAnD,SACI,eAAC9I,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACf,cAACL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,KAAD,CAAYE,QAAQ,KAAKG,UAAWZ,EAAQW,MAA5C,6BAEJ,cAACT,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACf,eAACL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,UACI,cAAC,KAAD,CACIsB,QAASsG,EACT1H,QAAQ,YACRG,UAAWZ,EAAQ+H,cACnBkB,UAAW,cAAC,IAAD,IAJf,qBASA,eAACC,GAAA,EAAD,CACIpM,KAAMuL,EACNJ,SAAUA,EACVkB,QAASZ,EACTa,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAEhB1I,UAAWZ,EAAQ2H,QACnB6B,mBAAiB,EAbrB,UAeI,eAACtJ,EAAA,EAAD,CAAMC,WAAS,EAACE,WAAW,SAASO,UAAWZ,EAAQ2H,QAAvD,UACI,cAACzH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACKxE,EACG,cAAC0N,GAAA,EAAD,CAAQC,IAAK3N,EAAawK,GAAI,CAAC7D,MAAM,GAAIwE,OAAO,IAAKtG,UAAWZ,EAAQ8H,aAExE,cAAC,IAAD,CAAYlI,SAAS,QAAQgB,UAAWZ,EAAQ8H,eAGxD,eAAC5H,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,UACI,cAAC,KAAD,UAAa1E,EAAS8N,cACtB,cAAC,KAAD,UAAa9N,EAAS+N,uBAG9B,cAACC,GAAA,EAAD,IACA,qBAAKjJ,UAAWZ,EAAQ6H,eAAxB,SACA,eAACiC,GAAA,EAAD,CAAa/I,UAAU,WAAvB,UACI,cAAC,KAAD,mCACA,eAACgJ,GAAA,EAAD,CACI,aAAW,aACXrE,KAAK,iCACL+C,MAAOrM,EACP4N,SAAUxB,EAJd,UAMI,cAACyB,GAAA,EAAD,CAAkBxB,MAAM,oCAAoCyB,QAAS,cAACC,GAAA,EAAD,IAAWC,MAAM,WACtF,cAACH,GAAA,EAAD,CAAkBxB,MAAM,oCAAoCyB,QAAS,cAACC,GAAA,EAAD,IAAWC,MAAM,WACtF,cAACH,GAAA,EAAD,CAAkBxB,MAAM,iCAAiCyB,QAAS,cAACC,GAAA,EAAD,IAAWC,MAAM,QACnF,cAACH,GAAA,EAAD,CAAkBxB,MAAM,qCAAqCyB,QAAS,cAACC,GAAA,EAAD,IAAWC,MAAM,mCEtG/H,IAAM/M,GAAQW,EAAQ,IAEP,YAACnC,GACd,MAAoCL,mBAAS,IAA7C,mBAAO6O,EAAP,KAAmBC,EAAnB,KACA,EAA8B9O,oBAAS,GAAvC,mBAAO+O,EAAP,KAAgBC,EAAhB,KAWMC,EAAgB,SAACC,GACrB,IAAIC,EAAc,GAClBD,EAAQE,YAAYrJ,KAAI,SAACsJ,GACnBC,OAAOC,OAAOF,GAASG,SAASnP,EAAS2C,QAAQkH,OAEnDiF,EAAYhF,KAAKkF,MAGrBP,EAAcK,IA6FhB,OAVA5N,qBAAU,WAnGRyN,GAAW,GACXnN,GACGC,IAAI,2DACJb,MAAK,SAAUiC,GACd+L,EAAc/L,EAAStB,WAiG1B,IAEHL,qBAAU,WACJsN,EAAWtL,OAAS,IApFxBsL,EAAW9I,KAAI,SAACsJ,GACd,IAAII,EAAU,GACd,IAAK,IAAMC,KAAQL,EACjB,GAAIA,EAAQK,KAAUrP,EAAS2C,QAAQkH,KAAM,CAE3C,IAAIyF,EAAc,GAClB,OAAQD,GACN,IAAK,kBACHC,EAAc,eACd,MACF,IAAK,kBACHA,EAAc,iBACd,MACF,IAAK,kBACHA,EAAc,sBACd,MACF,IAAK,kBACHA,EAAc,sBACd,MACF,IAAK,kBACHA,EAAc,yBACd,MACF,IAAK,kBACHA,EAAc,sBACd,MACF,IAAK,iBACHA,EAAc,cACd,MACF,IAAK,iBACHA,EAAc,gBACd,MACF,IAAK,iBACHA,EAAc,qBACd,MACF,IAAK,iBACHA,EAAc,qBACd,MACF,IAAK,iBACHA,EAAc,wBACd,MACF,IAAK,iBACHA,EAAc,qBACd,MACF,IAAK,kBACHA,EAAc,WACd,MACF,IAAK,kBACHA,EAAc,aACd,MACF,IAAK,kBACHA,EAAc,kBACd,MACF,IAAK,kBACHA,EAAc,kBACd,MACF,IAAK,kBACHA,EAAc,qBACd,MACF,IAAK,kBACHA,EAAc,kBACd,MACF,IAAK,sBACHA,EAAc,mBACd,MACF,IAAK,qBACHA,EAAc,kBACd,MACF,QACEA,EAAcD,EAElBD,EAAQtF,KAAKwF,GAGjBN,EAAQI,QAAUA,KAEpBX,EAAcD,GACdG,GAAW,MAWV,CAACH,IAEG,CACLA,aACAE,Y,4DCrHWpL,eAAW,CACxBiM,UAAW,CACTzL,SAAU,IACVgD,OAAQ,WAEV0I,aAAc,GAGd9L,SAAU,CACRC,MAAO,UACPC,WAAY,GAEdC,gBAAiB,CACfC,SAAU,IACVC,SAAU,IAEZR,MAAO,CACLC,UAAW,IACXC,UAAW,UCEA,SAASgM,GAAWxL,GAC/B,IACIjE,EACAiE,EADAjE,SAEJ,EAGIkE,GAASlE,GAFTwO,EADJ,EACIA,WACAE,EAFJ,EAEIA,QAEEvK,EAAUC,KAChB,OACI,gCACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,WAAW,SAA3C,UACI,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,SACA,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,oCAEA,cAACP,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACI,cAACG,EAAA,EAAD,CAASC,MACL,sBAAMC,UAAWZ,EAAQN,gBAAzB,oFAGAmB,UAAU,aAJd,SAMI,cAAC,IAAD,CAAiBjB,SAAS,QAAQgB,UAAWZ,EAAQT,mBAI/DgL,GAAWF,EAAWtL,OAAS,GACjC,cAAC,KAAD,CAAgBgC,UAAWC,IAAOJ,UAAWZ,EAAQZ,MAArD,SACI,eAAC,KAAD,CAAO8B,cAAY,EAACC,KAAK,QAAzB,UACI,cAAC,KAAD,UACI,eAAC,KAAD,WACI,cAAC,KAAD,2BACA,cAAC,KAAD,4BAGR,cAAC,KAAD,UACKkJ,EAAW9I,KAAI,SAACsJ,GAAD,OACZ,eAAC,KAAD,WAEI,cAAC,KAAD,CAAWjK,UAAWZ,EAAQoL,UAA9B,SACI,cAAC1K,EAAA,EAAD,CAASC,MAAOkK,EAAQnJ,aAAcb,UAAU,MAAMD,UAAWZ,EAAQqL,aAAcE,WAAY,IAAnG,SACI,cAAC/K,EAAA,EAAD,CAAYC,QAAQ,QAAQ+K,QAAM,EAAlC,SAAoCX,EAAQnJ,mBAGpD,cAAC,KAAD,UAAYmJ,EAAQI,QAAQ1J,KAAI,SAACkK,GAAD,OAAWA,KAAOC,KAAK,qBAOpD,IAAtBrB,EAAWtL,QACZ,eAACyB,EAAA,EAAD,CAAYC,QAAQ,QAApB,sDAC6C,uBAD7C,6BAE8B,mBAAGsB,KAAK,4CAA4CC,OAAO,SAASC,IAAI,aAAxE,kBAF9B,+BCnEG,SAAS0J,KACpB,OACI,gCACI,cAACnL,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAAyB,gEACzB,cAACD,EAAA,EAAD,CAAYC,QAAQ,YAAYyF,MAAM,OAAO4C,MAAO,CAAC9B,WAAY,MAAjE,wBACA,eAACxG,EAAA,EAAD,CAAYC,QAAQ,QAAQyF,MAAM,OAAO4C,MAAO,CAAC9B,WAAY,MAA7D,UACA,yCAAe,uBACf,kCAFA,uCAE4C,uBAC5C,kCAHA,+BAGoC,uBACpC,kCAJA,oEAIyE,uBACzE,yCAAe,uBACf,kCANA,+BAMoC,uBACpC,kCAPA,wEAO6E,uBAC7E,kCARA,uFCJG,SAAS4E,KACpB,OACI,gCACI,cAACpL,EAAA,EAAD,CAAYC,QAAQ,KAApB,yBACA,uBACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,kEACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,yEACA,cAAC6G,GAAA,EAAD,CAAKf,GAAI,CAACW,OAAQ,UCbf/H,mBAAW,CACxB0M,YAAa,CACX3J,OAAQ,OACRiF,UAAW,OAEb2E,YAAa,CACX9E,WAAY,QACZD,YAAa,OACbrE,MAAO,OAETqJ,UAAW,CACT7E,OAAQ,IAEV8E,QAAS,CACPhF,WAAY,KACZD,YAAa,MAEfkF,eAAgB,CACdlJ,cAAe,MAEjBmJ,UAAW,CACTC,UAAW,QACXC,eAAgB,WCAL,SAASvM,KACpB,MAQIE,cANApE,GAFJ,EACIW,mBADJ,EAEIX,UACAuB,EAHJ,EAGIA,YACArB,EAJJ,EAIIA,SACAE,EALJ,EAKIA,YACAK,EANJ,EAMIA,mBACAC,EAPJ,EAOIA,sBAEE2D,EAAUC,KAChB,OACI,iCACEtE,GACF,qCACI,cAAC0Q,EAAA,EAAD,CAAOC,SAAS,UAAhB,uFACA,cAAC,IAAD,CAAgBC,SAAS,uCAAuCC,aAActP,EAAa0D,UAAWZ,EAAQ6L,YAAaY,sBAAoB,EAACC,cAAY,OAG/J/Q,GACD,sBAAKiF,UAAWZ,EAAQkM,UAAWpD,MAAO,CAAC6D,gBAAgB,OAAD,OAASvQ,EAAT,MAA1D,UACI,cAAC4L,GAAD,CACInM,SAAUA,EACVE,YAAaA,EACbK,mBAAoBA,EACpBC,sBAAuBA,IAE3B,qBAAKuE,UAAWZ,EAAQ+L,YACxB,sBAAKnL,UAAWZ,EAAQgM,QAAxB,UACI,eAAC9L,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMwM,QAAS,EAAGhM,UAAWZ,EAAQiM,eAA/D,UACI,cAAC/L,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACI,cAACsM,EAAA,EAAD,UACI,cAAC,EAAD,CAAShR,SAAUA,QAG3B,cAACqE,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACI,cAACsM,EAAA,EAAD,UACI,cAAClB,GAAD,WAIZ,eAACzL,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMwM,QAAS,EAAGhM,UAAWZ,EAAQiM,eAA/D,UACI,cAAC/L,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACI,cAACsM,EAAA,EAAD,UACI,cAACvJ,GAAD,CACIzH,SAAUA,QAItB,cAACqE,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACI,cAACsM,EAAA,EAAD,UACI,cAACvB,GAAD,CACIzP,SAAUA,WAK1B,eAACqE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMwM,QAAS,EAAGhM,UAAWZ,EAAQiM,eAA/D,UACI,cAAC/L,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACI,cAACsM,EAAA,EAAD,UACI,cAACxF,GAAD,QAGR,cAACnH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACI,cAACsM,EAAA,EAAD,UACI,cAACjB,GAAD,oBC7EbkB,OARf,WACE,OACE,qBAAKlM,UAAU,MAAf,SACE,cAAC,GAAD,OCKSmM,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBxQ,MAAK,YAAkD,IAA/CyQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCIRO,GAAcjF,QACW,cAA7BzL,OAAO2Q,SAASC,UAEe,UAA7B5Q,OAAO2Q,SAASC,UAEhB5Q,OAAO2Q,SAASC,SAASC,MACvB,2DAmCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTnR,MAAK,SAACwR,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfR,UAAUC,cAAcQ,YAI1BvR,QAAQC,IACN,uDAIE4Q,GAAUA,EAAOW,UACnBX,EAAOW,SAASP,KAMlBjR,QAAQC,IAAI,sCAGR4Q,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUR,WAO5BS,OAAM,SAACC,GACN3R,QAAQ2R,MAAM,4CAA6CA,MCpFjEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SDUnB,SAAkBnB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAImB,IAAIC,GAAwBrS,OAAO2Q,SAASzL,MACpDoN,SAAWtS,OAAO2Q,SAAS2B,OAIvC,OAGFtS,OAAOuS,iBAAiB,QAAQ,WAC9B,IAAMxB,EAAK,UAAMsB,GAAN,sBAEP3B,KA4DV,SAAiCK,EAAOC,GAEtCwB,MAAMzB,EAAO,CACXnQ,QAAS,CACP,iBAAkB,YAGnBhB,MAAK,SAACiC,GAEL,IAAM4Q,EAAc5Q,EAASjB,QAAQH,IAAI,gBAEnB,MAApBoB,EAAS6Q,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5C1B,UAAUC,cAAc0B,MAAMhT,MAAK,SAACwR,GAClCA,EAAayB,aAAajT,MAAK,WAC7BI,OAAO2Q,SAASmC,eAKpBhC,GAAgBC,EAAOC,MAG1Ba,OAAM,WACL1R,QAAQC,IACN,oEArFA2S,CAAwBhC,EAAOC,GAI/BC,UAAUC,cAAc0B,MAAMhT,MAAK,WACjCO,QAAQC,IAAI,8DAId0Q,GAAgBC,EAAOC,OC7B/BE,GACAhB,O","file":"static/js/main.bf8f638a.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { format, isThisSecond, isEqual } from \"date-fns\";\r\nimport axios from \"axios\";\r\n\r\n//Background Image Objects - Don't Delete!!!! THESE ARE ACTUALLY ALL BEING USED\r\nimport Lemons from \"../../backgrounds/Lemons.png\";\r\nimport Cosmos from \"../../backgrounds/Cosmos.png\";\r\nimport Koi from \"../../backgrounds/Koi.png\";\r\nimport Circuit from \"../../backgrounds/Circuit.png\";\r\n//DONT DELETE ^^^^^^\r\n\r\nexport default () => {\r\n  const [sendNotification, setSendNotification] = useState(false);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [userData, setUserData] = useState([]);\r\n  const [userImgData, setUserImgData] = useState(\"\");\r\n  const [selectedBackground, setSelectedBackground] = useState(\r\n    localStorage.getItem(\"selectedBackground\")\r\n      ? localStorage.getItem(\"selectedBackground\")\r\n      : Lemons\r\n  );\r\n\r\n  const authHandler = (err, data) => {\r\n    console.log(err, data);\r\n    if (data) {\r\n      // prettier-ignore\r\n      axios\r\n        .get(\"https://graph.microsoft.com/v1.0/me/photo/$value\", {\r\n          cache: true,\r\n          responseType: 'arraybuffer',\r\n          headers: { \"Authorization\": \"Bearer \" + data.accessToken },\r\n        })\r\n        .then((photo) => {\r\n          const newImgData = 'data:image/jpeg;base64,' + Buffer.from(photo.data, 'binary').toString('base64');\r\n          setUserImgData(newImgData);\r\n        });\r\n      setUserData(data);\r\n      setLoggedIn(true);\r\n    }\r\n  };\r\n\r\n  const handleNotification = () => {\r\n    Notification.requestPermission().then(() => {\r\n      var notification = new Notification(\r\n        \"You have 4 new calculations to complete, click to view\"\r\n      );\r\n      notification.onclick = function (event) {\r\n        event.preventDefault();\r\n        window.open(\r\n          \"https://bmtools.arup.com/calcs/mechanical/project/demo\",\r\n          \"_blank\"\r\n        );\r\n      };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sendNotification) {\r\n      const timedNotification = () => {\r\n        console.log(\"timed notification\");\r\n      };\r\n      timedNotification();\r\n      handleNotification();\r\n      setSendNotification(false);\r\n    }\r\n  }, [sendNotification]);\r\n\r\n  return {\r\n    handleNotification,\r\n    loggedIn,\r\n    authHandler,\r\n    userData,\r\n    userImgData,\r\n    selectedBackground,\r\n    setSelectedBackground,\r\n  };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Lemons.25a0929a.png\";","export default __webpack_public_path__ + \"static/media/Cosmos.c6c9718e.png\";","export default __webpack_public_path__ + \"static/media/Koi.a797714b.png\";","export default __webpack_public_path__ + \"static/media/Circuit.6d04891f.png\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState, useEffect } from \"react\";\r\nconst axios = require(\"axios\");\r\n\r\nexport default (userData) => {\r\n  const [myCalcs, setMyCalcs] = useState([]);\r\n  const [newCalcs, setNewCalcs] = useState([]);\r\n  const [notificationSent, setNotificationSent] = useState(false);\r\n\r\n  const getMyCalcs = () => {\r\n    axios\r\n      .get(\r\n        `https://bmtools.arup.com/calcs/api/mechanical/pwadata/${userData.account.userName}`\r\n        //`https://bmtools.arup.com/calcs/api/mechanical/pwadata/Sean.Chapman@arup.com`\r\n      )\r\n      .then(function (response) {\r\n        setMyCalcs(response.data.calcs);\r\n      });\r\n  };\r\n\r\n  const getNewCalcs = () => {\r\n    axios\r\n      .get(\r\n        `https://bmtools.arup.com/calcs/api/mechanical/pwadata/${userData.account.userName}`\r\n        //`https://bmtools.arup.com/calcs/api/mechanical/pwadata/Sean.Chapman@arup.com`\r\n      )\r\n      .then(function (response) {\r\n        setNewCalcs(response.data.calcs);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyCalcs();\r\n    setNewCalcs(myCalcs);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const checkForCalcs = setInterval(() => {\r\n      getNewCalcs();\r\n      return () => clearInterval(checkForCalcs);\r\n    }, 60000);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (newCalcs.length > myCalcs.length) {\r\n      //Could link to the specific project\r\n      Notification.requestPermission().then(() => {\r\n        var notification = new Notification(\r\n          \"You have a new Calculation to complete\"\r\n        );\r\n        notification.onclick = function (event) {\r\n          event.preventDefault();\r\n          window.open(\r\n            \"https://bmtools.arup.com/calcs/mechanical/mycalcs\",\r\n            \"_blank\"\r\n          );\r\n        };\r\n      });\r\n    } else if (newCalcs.length < myCalcs.length) {\r\n      //Could display how many more to go\r\n      Notification.requestPermission().then(() => {\r\n        new Notification(\r\n          `Well done! You've completed a Calculation, only ${newCalcs.length} more to go.`\r\n        );\r\n      });\r\n    }\r\n    console.log(newCalcs, myCalcs);\r\n    setNotificationSent(true);\r\n  }, [newCalcs]);\r\n\r\n  useEffect(() => {\r\n    if (notificationSent === true) {\r\n      getMyCalcs();\r\n      setNotificationSent(false);\r\n    }\r\n    console.log(myCalcs, newCalcs);\r\n  }, [notificationSent]);\r\n\r\n  const completeCalc = (calc) => {\r\n    window.open(\r\n      `https://bmtools.arup.com/calcs/mechanical/project/${calc.ProjectCode}`,\r\n      \"_blank\"\r\n    );\r\n  };\r\n\r\n  return {\r\n    myCalcs,\r\n    completeCalc,\r\n  };\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles({\r\n  table: {\r\n    // //width: \"50%\",\r\n    // marginTop: 50,\r\n    // marginLeft: \"2.5%\",\r\n    // //margin: \"auto\",\r\n    maxHeight: 400,\r\n    overflowY: \"auto\",\r\n  },\r\n  helpIcon: {\r\n    color: \"#28aae1\", //Color picked from arup sharepoint 'blue',\r\n    paddingTop: 5,\r\n  },\r\n  helpTooltipSpan: {\r\n    maxWidth: 50,\r\n    fontSize: 12,\r\n  },\r\n});\r\n","import React from \"react\"\r\n\r\n//Material UI Components\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\r\n\r\n//Hooks\r\nimport useHooks from './hooks/use-hooks.js';\r\n\r\n//Styles\r\nimport useStyles from './my-calcs-styles.js'\r\n\r\nexport default function MainHub(props) {\r\n    const {\r\n        userData\r\n    }= props;\r\n    const {\r\n        myCalcs,\r\n        completeCalc\r\n    } = useHooks(userData);\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Grid container direction=\"row\" alignItems=\"center\">\r\n                <Grid item xs={11}>\r\n                    <Typography variant=\"h6\">Calc Centre</Typography>\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    <Tooltip title={\r\n                        <span className={classes.helpTooltipSpan}>\r\n                            This Card contains calculations that have been assigned to you and not yet marked\r\n                            as completed. Click on a calculation to be taken to the Calculation Tracker and\r\n                            begin work.\r\n                        </span>}\r\n                        placement=\"bottom-end\"\r\n                    >\r\n                        <HelpOutlineIcon fontSize=\"small\" className={classes.helpIcon} />\r\n                    </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n            {myCalcs.length > 0 ? (\r\n            <TableContainer component={Paper} className={classes.table}>\r\n                <Table stickyHeader size=\"small\">\r\n                    <TableHead>\r\n                        <TableCell>Calculation Name</TableCell>\r\n                        <TableCell>Project Name</TableCell>\r\n                        <TableCell>Stage</TableCell>\r\n                        <TableCell />\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {myCalcs.map((calc) => (\r\n                         <TableRow key={calc.calculation_id}>\r\n                             <TableCell>{calc.calculation}</TableCell>\r\n                             <TableCell>{calc.JobNameShort}</TableCell>\r\n                             <TableCell>{calc.stage}</TableCell>\r\n                             <TableCell><Button variant=\"contained\" color=\"primary\" onClick={() => completeCalc(calc)}>Complete</Button></TableCell>\r\n                         </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            ) : (\r\n            <Typography variant=\"body2\">\r\n                It looks like you don't have any calculations to Complete. <br />\r\n                Visit the Calc Tracker and check back later.<br />\r\n                <a href=\"https://bmtools.arup.com/calcs/mechanical\" target=\"_blank\" rel=\"noreferrer\" >Mechanical</a> |&nbsp;\r\n                <a href=\"https://bmtools.arup.com/calcs/electrical\" target=\"_blank\" rel=\"noreferrer\" >Electrical</a> |&nbsp;\r\n                <a href=\"https://bmtools.arup.com/calcs/structural\" target=\"_blank\" rel=\"noreferrer\" >Structural</a>\r\n            </Typography>   \r\n            )}\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from \"react\";\r\nconst axios = require(\"axios\");\r\n\r\nexport default (userData) => {\r\n  const [myRecords, setMyRecords] = useState([]);\r\n  const [bimLeadRecords, setBimLeadRecords] = useState([]);\r\n  const [bimCheckerApproverRecords, setBimCheckerApproverRecords] = useState(\r\n    []\r\n  );\r\n  const [expandTables, setExpandTables] = useState(false);\r\n\r\n  const getRecords = () => {\r\n    axios\r\n      .get(\"https://bmtools.arup.com/bimtracker/api/allrecords/all\")\r\n      .then(function (response) {\r\n        getProgress(response.data);\r\n      });\r\n\r\n    //Check for ActiveBIM status\r\n  };\r\n\r\n  const getProgress = (data) => {\r\n    const records = data.map((record) => {\r\n      let completePeople = false;\r\n      let completeStorage = false;\r\n      let completeProcess = false;\r\n      let completeCoordination = false;\r\n      if (\r\n        record.Approver_B_name &&\r\n        record.Checker_B_name &&\r\n        record.CoordinationManager &&\r\n        record.Engineer_B_name\r\n      ) {\r\n        completePeople = true;\r\n      }\r\n      if (\r\n        record.storage_CDE &&\r\n        record.storage_C_Models &&\r\n        record.storage_Clarity_BIM_360_Backup &&\r\n        record.storage_MEP_Models &&\r\n        record.storage_S_Models\r\n      ) {\r\n        completeStorage = true;\r\n      }\r\n      if (\r\n        //record.process_BEP_Comments &&\r\n        record.process_BEP_Status &&\r\n        //record.process_Comments &&\r\n        //record.process_EIR_Comments &&\r\n        record.process_EIR_Status &&\r\n        record.process_Information_Deliverables &&\r\n        //record.process_Responsibility_Matrix_Comments &&\r\n        record.process_Responsibility_Matrix_Status\r\n      ) {\r\n        completeProcess = true;\r\n      }\r\n      if (\r\n        record.coordination_Internal_Coord_Meetings &&\r\n        record.coordination_Issue_Tracking &&\r\n        //record.coordination_Issue_Tracking_Other &&\r\n        record.coordination_Whole_Team_Coord_Meetings\r\n      ) {\r\n        completeCoordination = true;\r\n      }\r\n      return {\r\n        ...record,\r\n        completePeople,\r\n        completeStorage,\r\n        completeProcess,\r\n        completeCoordination,\r\n      };\r\n    });\r\n    setMyRecords(records);\r\n  };\r\n\r\n  const handleExpandTables = () => {\r\n    setExpandTables(!expandTables);\r\n  };\r\n\r\n  const handleOpenProject = (projectCode) => {\r\n    let url =\r\n      \"https://bmtools.arup.com/bimtracker?projectFilter=\" + projectCode;\r\n    window.open(url);\r\n  };\r\n\r\n  const handleOpenProjectDiscipline = (projectCode, discipline) => {\r\n    let url =\r\n      \"https://bmtools.arup.com/bimtracker?projectFilter=\" +\r\n      projectCode +\r\n      \"&discipline=\" +\r\n      discipline;\r\n    window.open(url);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRecords();\r\n    const interval = setInterval(() => {\r\n      getRecords();\r\n    }, 60000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (myRecords.length > 0) {\r\n      let newBIMLeadRecords = [];\r\n      let newBIMCheckerApproverRecords = [];\r\n      myRecords.map((record) => {\r\n        if (record.Engineer_B_name === userData.account.name) {\r\n          //if (record.Engineer_B_name === \"Colin Magner\") {\r\n          newBIMLeadRecords.push(record);\r\n        }\r\n        if (\r\n          record.Checker_B_name === userData.account.name ||\r\n          record.Approver_B_name === userData.account.name\r\n        ) {\r\n          // if (\r\n          //   record.Checker_B_name === \"Colin Magner\" ||\r\n          //   record.Approver_B_name === \"Colin Magner\"\r\n          // ) {\r\n          newBIMCheckerApproverRecords.push(record);\r\n        }\r\n      });\r\n      setBimLeadRecords(newBIMLeadRecords);\r\n      setBimCheckerApproverRecords(newBIMCheckerApproverRecords);\r\n    }\r\n  }, [myRecords]);\r\n\r\n  return {\r\n    myRecords,\r\n    bimLeadRecords,\r\n    bimCheckerApproverRecords,\r\n    handleExpandTables,\r\n    expandTables,\r\n    handleOpenProject,\r\n    handleOpenProjectDiscipline,\r\n  };\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles({\r\n  table: {\r\n    maxWidth: \"100%\",\r\n    margin: \"auto\",\r\n    maxHeight: 350,\r\n    overflowY: \"auto\",\r\n  },\r\n  cellRed: {\r\n    color: \"#ff0000\",\r\n  },\r\n  cellAmber: {\r\n    color: \"#FFBF00\",\r\n  },\r\n  cellGreen: {\r\n    color: \"#00FF00\",\r\n  },\r\n  cellYellow: {\r\n    color: \"#FFFF00\",\r\n  },\r\n  tableHeader: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  jobNameCell: {\r\n    width: 200,\r\n    cursor: \"pointer\",\r\n  },\r\n  projectCodeCell: {\r\n    width: 50,\r\n    paddingRight: 0,\r\n    cursor: \"pointer\",\r\n  },\r\n  iconHeader: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n  },\r\n  iconCell: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    cursor: \"pointer\",\r\n  },\r\n  healthCell: {\r\n    //width: 400,\r\n  },\r\n  accordionContainer: {\r\n    maxHeight: 400,\r\n    overflowY: \"auto\",\r\n  },\r\n  accordionProjectStatus: {\r\n    paddingRight: 20,\r\n  },\r\n  subtitle: {\r\n    paddingLeft: \"3%\",\r\n    paddingTop: \"1%\",\r\n  },\r\n  helpIcon: {\r\n    color: \"#28aae1\", //Color picked from arup sharepoint 'blue',\r\n    paddingTop: 5,\r\n  },\r\n  helpTooltipSpan: {\r\n    maxWidth: 100,\r\n    fontSize: 12,\r\n  },\r\n});\r\n","import React from \"react\"\r\nimport { formatDistanceToNow, parseISO } from 'date-fns'\r\n\r\n//Hooks\r\nimport useHooks from './hooks/use-hooks.js';\r\n\r\n//Material UI Components\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport StorageIcon from '@mui/icons-material/Storage';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport FactCheckIcon from '@mui/icons-material/FactCheck';\r\nimport ExtensionIcon from '@mui/icons-material/Extension';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\r\n\r\n//Styles\r\nimport useStyles from './my-bim-tracker-styles.js';\r\n\r\nexport default function MyBIMTracker(props) {\r\n    const {\r\n        userData\r\n    } = props;\r\n    const {\r\n        myRecords,\r\n        bimLeadRecords,\r\n        bimCheckerApproverRecords,\r\n        handleExpandTables,\r\n        expandTables,\r\n        handleOpenProject,\r\n        handleOpenProjectDiscipline\r\n    } = useHooks(\r\n        userData\r\n    );\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Grid container direction=\"row\" alignItems=\"center\">\r\n                <Grid item xs={11}>\r\n                    <Typography variant=\"h6\">BIM Reviewer</Typography>\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    <Tooltip title={\r\n                        <span className={classes.helpTooltipSpan}>\r\n                            This Card contains relevant progress information for your BIM projects, open the tabs and click on any ticks\r\n                            or crosses to be taken to the relevant section of the BIM Tracker. You'll find more tooltips throughout, that\r\n                            provide explanations where needed.\r\n                        </span>}\r\n                        placement=\"bottom-end\"\r\n                    >\r\n                        <HelpOutlineIcon fontSize=\"small\" className={classes.helpIcon} />\r\n                    </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n            <div className={classes.accordionContainer}>\r\n            {bimCheckerApproverRecords.length > 0 && <>\r\n            <Typography variant=\"subtitle1\" align=\"left\" className={classes.subtitle}>I'm a Checker or Approver:</Typography>\r\n            {bimCheckerApproverRecords.map((record) => (\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon fontSize=\"small\"/>}\r\n                    >\r\n                        <div className={classes.accordionProjectStatus}>\r\n                        <Tooltip placement=\"top\" title={100 - record.projectStatus < 0\r\n                            ? 0 + \"%\"\r\n                            : 100 - record.projectStatus + \"%\"}\r\n                        >\r\n                            <FavoriteIcon fontSize=\"small\" className={100 - record.projectStatus < 51 ? (classes.cellRed) : \r\n                                (100 - record.projectStatus < 76 ? (classes.cellAmber) : \r\n                                (100 - record.projectStatus < 100 ? (classes.cellYellow) : (classes.cellGreen)))}\r\n                            />\r\n                        </Tooltip>\r\n                        </div>\r\n                        <Typography variant=\"body2\" sx={{width: \"90%\"}}>\r\n                            {record.PCode} {record.JobNameShort}\r\n                        </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableCell className={classes.iconHeader}><Tooltip title=\"People\" placement=\"top\"><PersonIcon /></Tooltip></TableCell>\r\n                                <TableCell className={classes.iconHeader}><Tooltip title=\"Storage\" placement=\"top\"><StorageIcon /></Tooltip></TableCell>\r\n                                <TableCell className={classes.iconHeader}><Tooltip title=\"Process\" placement=\"top\"><SettingsIcon /></Tooltip></TableCell>\r\n                                <TableCell className={classes.iconHeader}><Tooltip title=\"Coordination\" placement=\"top\"><FactCheckIcon /></Tooltip></TableCell>\r\n                                <TableCell className={classes.iconHeader}><Tooltip title=\"Automation\" placement=\"top\"><ExtensionIcon /></Tooltip></TableCell>\r\n                                <TableCell className={classes.tableHeader}>Last Updated</TableCell>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell className={classes.iconCell} onClick={() => handleOpenProjectDiscipline(record.PCode, \"people\")}>{record.completePeople ? (<CheckIcon />) : (<ClearIcon />)}</TableCell>\r\n                                    <TableCell className={classes.iconCell} onClick={() => handleOpenProjectDiscipline(record.PCode, \"storage\")}>{record.completeStorage ? (<CheckIcon />) : (<ClearIcon />)}</TableCell>\r\n                                    <TableCell className={classes.iconCell} onClick={() => handleOpenProjectDiscipline(record.PCode, \"process\")}>{record.completeProcess ? (<CheckIcon />) : (<ClearIcon />)}</TableCell>\r\n                                    <TableCell className={classes.iconCell} onClick={() => handleOpenProjectDiscipline(record.PCode, \"coordination\")}>{record.completeCoordination ? (<CheckIcon />) : (<ClearIcon />)}</TableCell>\r\n                                    <TableCell className={classes.iconCell} onClick={() => handleOpenProjectDiscipline(record.PCode, \"automation\")}>\r\n                                        {record.automation_Clarity_Nightly_Exports ? (<CheckIcon />) : (<ClearIcon />)}\r\n                                    </TableCell>\r\n                                    <TableCell>{record.updated_at ? (formatDistanceToNow(parseISO(record.updated_at))) + \" ago\" : (\"No data\")}</TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            ))}\r\n            </>}\r\n            {bimLeadRecords.length > 0 && <>\r\n            <Typography variant=\"subtitle1\" align=\"left\" className={classes.subtitle}>I'm a BIM Lead:</Typography>\r\n            {bimLeadRecords.map((record) => (\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon fontSize=\"small\" />}\r\n                    >\r\n                        <div className={classes.accordionProjectStatus}>\r\n                        <Tooltip placement=\"top\" title={100 - record.projectStatus < 0\r\n                            ? 0 + \"%\"\r\n                            : 100 - record.projectStatus + \"%\"}\r\n                        >\r\n                            <FavoriteIcon fontSize=\"small\" className={100 - record.projectStatus < 51 ? (classes.cellRed) : \r\n                                (100 - record.projectStatus < 76 ? (classes.cellAmber) : \r\n                                (100 - record.projectStatus < 100 ? (classes.cellYellow) : (classes.cellGreen)))}\r\n                            />\r\n                        </Tooltip>\r\n                        </div>\r\n                        <Typography variant=\"body2\">\r\n                            {record.PCode} {record.JobNameShort}\r\n                        </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableCell className={classes.iconHeader}><Tooltip title=\"People\" placement=\"top\"><PersonIcon /></Tooltip></TableCell>\r\n                                <TableCell className={classes.iconHeader}><Tooltip title=\"Storage\" placement=\"top\"><StorageIcon /></Tooltip></TableCell>\r\n                                <TableCell className={classes.iconHeader}><Tooltip title=\"Process\" placement=\"top\"><SettingsIcon /></Tooltip></TableCell>\r\n                                <TableCell className={classes.iconHeader}><Tooltip title=\"Coordination\" placement=\"top\"><FactCheckIcon /></Tooltip></TableCell>\r\n                                <TableCell className={classes.iconHeader}><Tooltip title=\"Automation\" placement=\"top\"><ExtensionIcon /></Tooltip></TableCell>\r\n                                <TableCell className={classes.tableHeader}>Last Updated</TableCell>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell className={classes.iconCell} onClick={() => handleOpenProjectDiscipline(record.PCode, \"people\")}>{record.completePeople ? (<CheckIcon />) : (<ClearIcon />)}</TableCell>\r\n                                    <TableCell className={classes.iconCell} onClick={() => handleOpenProjectDiscipline(record.PCode, \"storage\")}>{record.completeStorage ? (<CheckIcon />) : (<ClearIcon />)}</TableCell>\r\n                                    <TableCell className={classes.iconCell} onClick={() => handleOpenProjectDiscipline(record.PCode, \"process\")}>{record.completeProcess ? (<CheckIcon />) : (<ClearIcon />)}</TableCell>\r\n                                    <TableCell className={classes.iconCell} onClick={() => handleOpenProjectDiscipline(record.PCode, \"coordination\")}>{record.completeCoordination ? (<CheckIcon />) : (<ClearIcon />)}</TableCell>\r\n                                    <TableCell className={classes.iconCell} onClick={() => handleOpenProjectDiscipline(record.PCode, \"automation\")}>\r\n                                        {record.automation_Clarity_Nightly_Exports ? (<CheckIcon />) : (<ClearIcon />)}\r\n                                    </TableCell>\r\n                                    <TableCell>{record.updated_at ? (formatDistanceToNow(parseISO(record.updated_at))) + \" ago\" : (\"No data\")}</TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            ))}\r\n            </>}\r\n            </div>\r\n            {bimLeadRecords.length === 0 && bimCheckerApproverRecords.length === 0 &&\r\n            <Typography variant=\"body2\">\r\n                It looks like you aren't on any BIM Projects<br />\r\n                Visit the BIM Tracker <a href=\"https://bmtools.arup.com/bimtracker/\" target=\"_blank\" rel=\"noreferrer\" >here</a> and check back later.\r\n            </Typography>\r\n            }\r\n            \r\n        </div>\r\n    );\r\n}","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles({\r\n  weather: {\r\n    marginRight: \"2.5%\",\r\n    marginLeft: \"2.5%\",\r\n    width: \"100%\",\r\n  },\r\n});\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles({\r\n  news: {\r\n    width: 900,\r\n    height: 500,\r\n    marginTop: 50,\r\n    marginBottom: 50,\r\n    margin: \"auto\",\r\n  },\r\n});\r\n","import React from \"react\"\r\n\r\n//Styles\r\nimport useStyles from './bm-news-styles.js';\r\n\r\n//Material UI Components\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nexport default function BMNews() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            {/* <iframe className={classes.news} src=\"https://arup.sharepoint.com/_layouts/15/sharepoint.aspx?v=news&spStartSource=spappbar\"\r\n             title=\"BM News\"></iframe> */}\r\n            <Typography variant=\"h6\">Arup News</Typography>\r\n            <br />\r\n            <Typography variant=\"body2\">This component will contain UKIMEA, BEM & Skills Network news</Typography>\r\n            <Typography variant=\"body2\">Currently Under Construction</Typography>\r\n            <Box sx={{height: 200}}/>\r\n        </div>\r\n    );\r\n}","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles({\r\n  box: {\r\n    marginBottom: 15,\r\n  },\r\n  toolbar: {\r\n    //backgroundColor: \"#a8a8a8\",\r\n    backgroundColor: \"#e3e3e3\",\r\n  },\r\n  title: {\r\n    color: \"black\",\r\n  },\r\n  headerGrid: {\r\n    paddingLeft: 0,\r\n  },\r\n  popover: {\r\n    minWidth: 200,\r\n    paddingBottom: 5,\r\n  },\r\n  backgroundForm: {\r\n    paddingLeft: \"3%\",\r\n  },\r\n  userAvatar: {\r\n    paddingLeft: 5,\r\n    paddingTop: 5,\r\n  },\r\n  popoverButton: {},\r\n});\r\n","import React from \"react\"\r\n\r\n//Material UI Components\r\nimport Box from '@mui/material/Box';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Popover from '@mui/material/Popover';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\n\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport Divider from '@mui/material/Divider';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\n//Hooks\r\nimport useHooks from './hooks/use-hooks.js';\r\n\r\n//Styles\r\nimport useStyles from './header-styles.js'\r\n\r\nexport default function Header(props) {\r\n    const classes = useStyles();\r\n    const {\r\n        userData,\r\n        userImgData,\r\n        selectedBackground,\r\n        setSelectedBackground\r\n    } = props;\r\n    const {\r\n        togglePopover,\r\n        popoverOpen,\r\n        closePopover,\r\n        anchorEl,\r\n        handleChangeBackground,\r\n    }=useHooks(selectedBackground, setSelectedBackground);\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }} className={classes.box}>\r\n            <AppBar position=\"fixed\" style={{backgroundColor: \"#e3e3e3\"}}>{/* was static OR used fixed with a spaceDiv*/}\r\n                <Toolbar className={classes.toolbar} disableGutters>\r\n                    <Grid container>\r\n                        <Grid item xs={4} />\r\n                        <Grid item xs={4}>\r\n                            <Typography variant=\"h4\" className={classes.title}>Buildings Hub</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={2} />\r\n                        <Grid item xs={2}>\r\n                            <Button \r\n                                onClick={togglePopover}\r\n                                variant=\"contained\"\r\n                                className={classes.popoverButton}\r\n                                startIcon={<PersonIcon />}\r\n                            >\r\n                                {/*Add user profile image or blank person icon*/}\r\n                                Account\r\n                            </Button>\r\n                            <Popover\r\n                                open={popoverOpen}\r\n                                anchorEl={anchorEl}\r\n                                onClose={closePopover}\r\n                                anchorOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                className={classes.popover}\r\n                                disableScrollLock\r\n                            >\r\n                                <Grid container alignItems=\"center\" className={classes.popover}>\r\n                                    <Grid item xs={4}>\r\n                                        {userImgData ? \r\n                                            <Avatar src={userImgData} sx={{width:50, height:50}} className={classes.userAvatar} />\r\n                                        : \r\n                                            <PersonIcon fontSize=\"large\" className={classes.userAvatar} />\r\n                                        }\r\n                                    </Grid>\r\n                                    <Grid item xs={8}>\r\n                                        <Typography>{userData.displayName}</Typography>\r\n                                        <Typography>{userData.officeLocation}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Divider />\r\n                                <div className={classes.backgroundForm}>\r\n                                <FormControl component=\"fieldset\">\r\n                                    <Typography>Background Wallpaper</Typography>\r\n                                    <RadioGroup\r\n                                        aria-label=\"background\"\r\n                                        name=\"controlled-radio-buttons-group\"\r\n                                        value={selectedBackground}\r\n                                        onChange={handleChangeBackground}\r\n                                    >\r\n                                        <FormControlLabel value=\"/static/media/Lemons.25a0929a.png\" control={<Radio />} label=\"Lemons\" />\r\n                                        <FormControlLabel value=\"/static/media/Cosmos.c6c9718e.png\" control={<Radio />} label=\"Cosmos\" />\r\n                                        <FormControlLabel value=\"/static/media/Koi.a797714b.png\" control={<Radio />} label=\"Koi\" />\r\n                                        <FormControlLabel value=\"/static/media/Circuit.6d04891f.png\" control={<Radio />} label=\"Circuit\" />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                                </div>\r\n                            </Popover>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    );\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nexport default (selectedBackground, setSelectedBackground) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const togglePopover = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const closePopover = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const popoverOpen = Boolean(anchorEl);\r\n\r\n  const handleChangeBackground = (event) => {\r\n    setSelectedBackground(event.target.value);\r\n    localStorage.setItem(\"selectedBackground\", event.target.value);\r\n  };\r\n\r\n  return {\r\n    togglePopover,\r\n    popoverOpen,\r\n    closePopover,\r\n    anchorEl,\r\n    handleChangeBackground,\r\n  };\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nconst axios = require(\"axios\");\r\n\r\nexport default (userData) => {\r\n  const [myProjects, setMyProjects] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const getData = () => {\r\n    setLoading(true);\r\n    axios\r\n      .get(\"https://projectapprovalstracker.arup.com/api/getpwadata\")\r\n      .then(function (response) {\r\n        getMyProjects(response.data);\r\n      });\r\n  };\r\n\r\n  const getMyProjects = (allData) => {\r\n    let newProjects = [];\r\n    allData.currentData.map((project) => {\r\n      if (Object.values(project).includes(userData.account.name)) {\r\n        //if (Object.values(project).includes(\"Colin Magner\")) {\r\n        newProjects.push(project);\r\n      }\r\n    });\r\n    setMyProjects(newProjects);\r\n  };\r\n\r\n  const getMyRoles = () => {\r\n    myProjects.map((project) => {\r\n      let myRoles = [];\r\n      for (const prop in project) {\r\n        if (project[prop] === userData.account.name) {\r\n          //if (project[prop] === \"Colin Magner\") {\r\n          let displayProp = \"\";\r\n          switch (prop) {\r\n            case \"Approver_B_name\":\r\n              displayProp = \"Approver BIM\";\r\n              break;\r\n            case \"Approver_C_name\":\r\n              displayProp = \"Approver Civil\";\r\n              break;\r\n            case \"Approver_E_name\":\r\n              displayProp = \"Approver Electrical\";\r\n              break;\r\n            case \"Approver_M_name\":\r\n              displayProp = \"Approver Mechanical\";\r\n              break;\r\n            case \"Approver_P_name\":\r\n              displayProp = \"Approver Public Health\";\r\n              break;\r\n            case \"Approver_S_name\":\r\n              displayProp = \"Approver Structural\";\r\n              break;\r\n            case \"Checker_B_name\":\r\n              displayProp = \"Checker BIM\";\r\n              break;\r\n            case \"Checker_C_name\":\r\n              displayProp = \"Checker Civil\";\r\n              break;\r\n            case \"Checker_E_name\":\r\n              displayProp = \"Checker Electrical\";\r\n              break;\r\n            case \"Checker_M_name\":\r\n              displayProp = \"Checker Mechanical\";\r\n              break;\r\n            case \"Checker_P_name\":\r\n              displayProp = \"Checker Public Health\";\r\n              break;\r\n            case \"Checker_S_name\":\r\n              displayProp = \"Checker Structural\";\r\n              break;\r\n            case \"Engineer_B_name\":\r\n              displayProp = \"Lead BIM\";\r\n              break;\r\n            case \"Engineer_C_name\":\r\n              displayProp = \"Lead Civil\";\r\n              break;\r\n            case \"Engineer_E_name\":\r\n              displayProp = \"Lead Electrical\";\r\n              break;\r\n            case \"Engineer_M_name\":\r\n              displayProp = \"Lead Mechanical\";\r\n              break;\r\n            case \"Engineer_P_name\":\r\n              displayProp = \"Lead Public Health\";\r\n              break;\r\n            case \"Engineer_S_name\":\r\n              displayProp = \"Lead Structural\";\r\n              break;\r\n            case \"ProjectDirectorName\":\r\n              displayProp = \"Project Director\";\r\n              break;\r\n            case \"ProjectManagerName\":\r\n              displayProp = \"Project Manager\";\r\n              break;\r\n            default:\r\n              displayProp = prop;\r\n          }\r\n          myRoles.push(displayProp);\r\n        }\r\n      }\r\n      project.myRoles = myRoles;\r\n    });\r\n    setMyProjects(myProjects);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (myProjects.length > 0) {\r\n      getMyRoles();\r\n    }\r\n  }, [myProjects]);\r\n\r\n  return {\r\n    myProjects,\r\n    loading,\r\n  };\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles({\r\n  titleCell: {\r\n    maxWidth: 150,\r\n    cursor: \"pointer\",\r\n  },\r\n  titleTooltip: {\r\n    //bottom: -20,\r\n  },\r\n  helpIcon: {\r\n    color: \"#28aae1\", //Color picked from arup sharepoint 'blue',\r\n    paddingTop: 5,\r\n  },\r\n  helpTooltipSpan: {\r\n    maxWidth: 100,\r\n    fontSize: 12,\r\n  },\r\n  table: {\r\n    maxHeight: 400,\r\n    overflowY: \"auto\",\r\n  },\r\n});\r\n","import React from \"react\"\r\n\r\n//Hooks\r\nimport useHooks from './hooks/use-hooks.js'\r\n\r\n//Material UI Components\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\r\n\r\n//Styles\r\nimport useStyles from './my-projects-styles.js';\r\n\r\nexport default function MyProjects(props) {\r\n    const {\r\n        userData\r\n    } = props;\r\n    const {\r\n        myProjects,\r\n        loading,\r\n    } = useHooks(userData);\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Grid container direction=\"row\" alignItems=\"center\">\r\n                <Grid item xs={11}>\r\n                <Typography variant=\"h6\">Project Role Tracker</Typography>\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    <Tooltip title={\r\n                        <span className={classes.helpTooltipSpan}>\r\n                            This Card contains your projects and the role that you are fulfilling.\r\n                        </span>}\r\n                        placement=\"bottom-end\"\r\n                    >\r\n                        <HelpOutlineIcon fontSize=\"small\" className={classes.helpIcon} />\r\n                    </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n            {!loading && myProjects.length > 0 && (\r\n            <TableContainer component={Paper} className={classes.table}>\r\n                <Table stickyHeader size=\"small\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Project Name</TableCell>\r\n                            <TableCell>My Roles</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {myProjects.map((project) => (\r\n                            <TableRow>\r\n                                {/* <TableCell>{project.ProjectCode}</TableCell> */}\r\n                                <TableCell className={classes.titleCell}>\r\n                                    <Tooltip title={project.JobNameShort} placement=\"top\" className={classes.titleTooltip} enterDelay={400}>\r\n                                        <Typography variant=\"body2\" noWrap>{project.JobNameShort}</Typography>\r\n                                    </Tooltip>\r\n                                </TableCell>\r\n                                <TableCell>{project.myRoles.map((role) => (role)).join(\", \")}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            )}\r\n            {myProjects.length === 0 &&\r\n            <Typography variant=\"body2\">\r\n                It looks like you aren't on any Projects <br />\r\n                Visit the Project Tracker <a href=\"https://projectapprovalstracker.arup.com/\" target=\"_blank\" rel=\"noreferrer\" >here</a> and check back later.\r\n            </Typography>\r\n            }\r\n        </div>\r\n    );\r\n}","import React from \"react\"\r\n\r\n//Hooks\r\n\r\n//Material UI Components\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Welcome() {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h6\"><b>Welcome to your Buildings Hub</b></Typography>\r\n            <Typography variant=\"subtitle1\" align=\"left\" style={{marginLeft: '3%'}}>Changelog:</Typography>\r\n            <Typography variant=\"body2\" align=\"left\" style={{marginLeft: '5%'}}>\r\n            <b>02/11/21</b><br />\r\n            <b>-</b> Styles Overhaul! It's all so shiny!<br />\r\n            <b>-</b> '?' tips added to each card<br />\r\n            <b>-</b> \"Your big head\" - Simon Hawkins, 2021. Check out the Account tab<br />\r\n            <b>01/11/21</b><br />\r\n            <b>-</b> Added Project Role Tracker <br />\r\n            <b>-</b> Backgrounds are available in the Account tab! Spice up your hub now!<br />\r\n            <b>-</b> NOTE: BIM Tracker & Project Role Tracker are currently locked to Colin Magner\r\n            </Typography>\r\n        </div>\r\n    );\r\n}","import React from \"react\"\r\n\r\n//Styles\r\n\r\n//Material UI Components\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nexport default function ComingSoon() {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h6\">Coming Soon</Typography>\r\n            <br />\r\n            <Typography variant=\"body2\">Trackers such as 30 day review, PM/PD tools and more</Typography>\r\n            <Typography variant=\"body2\">Possible PaT integration. Plan your time from your Desktop!</Typography>\r\n            <Box sx={{height: 200}}/>\r\n        </div>\r\n    );\r\n}","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles({\r\n  loginScreen: {\r\n    margin: \"auto\",\r\n    marginTop: \"20%\",\r\n  },\r\n  weatherGrid: {\r\n    marginLeft: \"1.25%\",\r\n    marginRight: \"2.5%\",\r\n    width: \"35%\",\r\n  },\r\n  spacerDiv: {\r\n    height: 64,\r\n  },\r\n  content: {\r\n    marginLeft: \"2%\",\r\n    marginRight: \"2%\",\r\n  },\r\n  contentGridRow: {\r\n    paddingBottom: \"1%\",\r\n  },\r\n  wholePage: {\r\n    minHeight: \"100vh\",\r\n    backgroundSize: \"cover\",\r\n  },\r\n});\r\n","import React from \"react\"\r\nimport MicrosoftLogin from \"react-microsoft-login\";\r\n\r\n//Material UI Components\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@mui/material/Card';\r\nimport Alert from '@mui/material/Alert';\r\n\r\n//Hooks\r\nimport useHooks from './hooks/use-hooks.js';\r\n\r\n//Project Components\r\nimport MyCalcs from '../my-calcs';\r\nimport MyBIMTracker from '../my-bim-tracker';\r\nimport BMWeather from \"../bm-weather\";\r\nimport BMNews from '../bm-news';\r\nimport Header from '../header';\r\nimport MyProjects from '../my-projects';\r\nimport Welcome from '../welcome';\r\nimport ComingSoon from '../coming-soon';\r\n\r\n//Styles\r\nimport useStyles from './main-hub-styles';\r\n\r\nexport default function MainHub() {\r\n    const {\r\n        handleNotification,\r\n        loggedIn,\r\n        authHandler,\r\n        userData,\r\n        userImgData,\r\n        selectedBackground,\r\n        setSelectedBackground\r\n    } = useHooks();\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n        {!loggedIn &&\r\n        <>\r\n            <Alert severity=\"warning\">Please ensure you are connected to the Arup Network for a full experience</Alert>\r\n            <MicrosoftLogin clientId=\"2b4cf606-ac2c-4532-a7b0-483d7f2427cc\" authCallback={authHandler} className={classes.loginScreen} useLocalStorageCache withUserData/>\r\n        </>\r\n        }\r\n        {loggedIn && \r\n        <div className={classes.wholePage} style={{backgroundImage: `url(${selectedBackground})`}}>\r\n            <Header\r\n                userData={userData}\r\n                userImgData={userImgData}\r\n                selectedBackground={selectedBackground}\r\n                setSelectedBackground={setSelectedBackground}\r\n            />\r\n            <div className={classes.spacerDiv}/>\r\n            <div className={classes.content}>\r\n                <Grid container direction=\"row\" spacing={2} className={classes.contentGridRow}>\r\n                    <Grid item xs={7}>\r\n                        <Card>\r\n                            <MyCalcs userData={userData} />\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={5}>\r\n                        <Card>\r\n                            <Welcome />\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container direction=\"row\" spacing={2} className={classes.contentGridRow}>\r\n                    <Grid item xs={7}>\r\n                        <Card>\r\n                            <MyBIMTracker \r\n                                userData={userData}\r\n                            />\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={5}>\r\n                        <Card>\r\n                            <MyProjects\r\n                                userData={userData}\r\n                            />\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container direction=\"row\" spacing={2} className={classes.contentGridRow}>\r\n                    <Grid item xs={6}>\r\n                        <Card>\r\n                            <BMNews />\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Card>\r\n                            <ComingSoon />\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n        }\r\n        </div>\r\n    );\r\n}","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport MainHub from \"./main-hub\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainHub />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\"This web app is being served cache-first by a service \");\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: {\r\n      \"Service-Worker\": \"script\",\r\n    },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.register();\nreportWebVitals();\n"],"sourceRoot":""}